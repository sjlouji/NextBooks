[{"/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/index.js":"1","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Dashboard/Profile/Profile.js":"2","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Dashboard/Home/Home.js":"3","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Dashboard/Profile/Logs/Logs.js":"4","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Accounts/LoginPage/LoginPage.js":"5","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Store/Action/auth.js":"6","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Route.js":"7","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Dashboard/Dashboard.js":"8","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/App.js":"9","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Dashboard/Profile/Information/Information.js":"10","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Store/configureStore.js":"11","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Dashboard/Profile/Security/Security.js":"12","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Store/Action/types.js":"13","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Error/404.js":"14","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Accounts/RegisterPage/RegisterPage.js":"15","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Accounts/ResetPage/ResetPage.js":"16","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Accounts/ResetPage/PasswordReset.js":"17","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Store/Reducer/auth.js":"18","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Error/401.js":"19","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/firebase/firebase.js":"20","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Dashboard/BankAccounts/BankAccount.js":"21","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Dashboard/BankAccounts/Component/AccountComponent.js":"22","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Store/Reducer/index.js":"23","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Store/Reducer/account.js":"24","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Store/Action/account.js":"25","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Dashboard/Transcation/Transcation.js":"26","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Store/Action/transcation.js":"27","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Store/Reducer/transcation.js":"28"},{"size":55,"mtime":1607768601090,"results":"29","hashOfConfig":"30"},{"size":7816,"mtime":1609675420172,"results":"31","hashOfConfig":"30"},{"size":205,"mtime":1609587180645,"results":"32","hashOfConfig":"30"},{"size":2830,"mtime":1609590224087,"results":"33","hashOfConfig":"30"},{"size":7634,"mtime":1609655986304,"results":"34","hashOfConfig":"30"},{"size":4831,"mtime":1609656503616,"results":"35","hashOfConfig":"30"},{"size":1758,"mtime":1610252860525,"results":"36","hashOfConfig":"30"},{"size":7841,"mtime":1610802397373,"results":"37","hashOfConfig":"30"},{"size":929,"mtime":1608390730680,"results":"38","hashOfConfig":"30"},{"size":6029,"mtime":1609587186491,"results":"39","hashOfConfig":"30"},{"size":383,"mtime":1607843812407,"results":"40","hashOfConfig":"30"},{"size":5185,"mtime":1609656698495,"results":"41","hashOfConfig":"30"},{"size":1243,"mtime":1610800255697,"results":"42","hashOfConfig":"30"},{"size":1345,"mtime":1609586103258,"results":"43","hashOfConfig":"30"},{"size":10324,"mtime":1609656098292,"results":"44","hashOfConfig":"30"},{"size":6468,"mtime":1609656263911,"results":"45","hashOfConfig":"30"},{"size":5946,"mtime":1609656467929,"results":"46","hashOfConfig":"30"},{"size":2567,"mtime":1609656575624,"results":"47","hashOfConfig":"30"},{"size":1215,"mtime":1609506070201,"results":"48","hashOfConfig":"30"},{"size":544,"mtime":1609586236723,"results":"49","hashOfConfig":"30"},{"size":6256,"mtime":1610805820559,"results":"50","hashOfConfig":"30"},{"size":7035,"mtime":1610800303935,"results":"51","hashOfConfig":"30"},{"size":156,"mtime":1610190703050,"results":"52","hashOfConfig":"30"},{"size":1031,"mtime":1610800249278,"results":"53","hashOfConfig":"30"},{"size":2211,"mtime":1610800252383,"results":"54","hashOfConfig":"30"},{"size":12518,"mtime":1610805884804,"results":"55","hashOfConfig":"30"},{"size":2866,"mtime":1610789218861,"results":"56","hashOfConfig":"30"},{"size":1502,"mtime":1610801414102,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"1js8cx",{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"65"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},"/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/index.js",["131"],"import App from './App';\nimport 'antd/dist/antd.css'; \n",["132","133"],"/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Dashboard/Profile/Profile.js",["134","135","136","137"],"import React, { Component } from 'react'\nimport { Card, Upload,Spin } from 'antd';\nimport { Image } from 'antd';\nimport { Divider } from 'antd';\nimport { connect } from 'react-redux';\nimport Security from './Security/Security'\nimport Information from './Information/Information'\nimport Logs from './Logs/Logs'\nimport { Button } from 'antd'\nimport { message } from 'antd'\nimport { storage } from \"../../../firebase/firebase\";\nimport { updateUser } from '../../../Store/Action/auth'\nimport { LoadingOutlined } from '@ant-design/icons';\n\n\n\nexport class Profile extends Component {\n\n    //  Holds the State\n    state = {\n        menu: 0,\n        profile_img: 'https://firebasestorage.googleapis.com/v0/b/nextbooks-1a9f0.appspot.com/o/Profile%2Funnamed.jpg?alt=media&token=26aa8e12-b869-4a2f-afde-ced8ebe2bf0e',\n        is_loading: false,\n    }\n\n    //  Constructor\n    constructor(props){\n        super(props)\n        this.handleUpload = this.handleUpload.bind(this)\n    }\n\n    //  Handles Menu Navigation\n    handleNav(item){\n        this.setState({\n            menu: item,\n        })\n    }\n\n    antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n    //  Uploads profile image to firebase storage\n    handleUpload(e){\n        this.setState({is_loading: true})\n        const uploadTask = storage.ref(`/Profile/${this.props.auth?this.props.auth.user.email:\"\"}`).put(e)\n        uploadTask.on('state_changed', \n        (snapShot) => {\n\n        }, (err) => {\n            this.setState({is_loading: false})\n          message(err)\n        }, () => {\n          storage.ref('Profile').child(this.props.auth?this.props.auth.user.email:\"\").getDownloadURL()\n           .then(fireBaseUrl => {\n            message.success(`Profile Image updated successfully.`);\n            this.props.updateUser(\"\",'','','',fireBaseUrl)\n            this.setState({  \n                profile_img: fireBaseUrl,\n                is_loading: false\n            })\n           })\n        })\n    }\n\n    //  Fired when the component recieves new props\n    componentWillReceiveProps(nextProps){\n        this.setState({ \n            profile_img: nextProps.auth?nextProps.auth.user.profile_img:\"https://firebasestorage.googleapis.com/v0/b/nextbooks-1a9f0.appspot.com/o/Profile%2Funnamed.jpg?alt=media&token=26aa8e12-b869-4a2f-afde-ced8ebe2bf0e\",\n         })\n    }\n\n    //  Fired when the component mounts\n    componentDidMount(){\n        this.setState({ \n            profile_img: this.props.auth?this.props.auth.user.profile_img:\"https://firebasestorage.googleapis.com/v0/b/nextbooks-1a9f0.appspot.com/o/Profile%2Funnamed.jpg?alt=media&token=26aa8e12-b869-4a2f-afde-ced8ebe2bf0e\",\n         })\n    }\n\n    render() {\n        let menu;\n        if(this.state.menu === 0){\n            menu = <Information />;\n        }else if(this.state.menu === 1){\n            menu = <Security />;\n        }else if(this.state.menu === 2){\n            menu = <Logs />;\n        } \n        return (\n          <div className=\"\">\n              {/* Breadcrumb */}\n              <div class=\"row\">\n                  <div class=\"col-sm-12\">\n                      <div class=\"page-title-box\">\n                          <div class=\"row\">\n                              <div class=\"col\">\n                                  <h4 class=\"page-title\">Profile</h4>\n                                  <ol class=\"breadcrumb\">\n                                      <li class=\"breadcrumb-item\"><a href=\"/books/profile\">Profile</a></li>\n                                      {this.state.menu === 0?<li class=\"breadcrumb-item active\">Personal Information</li>:\"\"}\n                                      {this.state.menu === 1?<li class=\"breadcrumb-item active\">Security</li>:\"\"}\n                                      {this.state.menu === 2?<li class=\"breadcrumb-item active\">Logs</li>:\"\"}\n                                  </ol>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n              {/* Content */}\n              <div className=\"row\" style={{ paddingLeft: '60px', paddingRight: '60px', paddingTop: '30px' }}>\n                <div className=\"col-4\">\n                    \n                  <Card style={{ width: '400px', borderColor: 'white' }}>\n\n                      <div style={{ width: '100%', float: 'right', textAlign: 'end' }}>\n                        <Spin indicator={this.antIcon} spinning={this.state.is_loading} style={{ float: 'left' }}/>\n                        <Upload accept=\".png, .jpg, .jpeg\" multiple={false} beforeUpload={this.handleUpload} showUploadList={false} style={{ float: 'right' }}><Button type=\"primary\"> Update Profile Pic</Button></Upload>\n                      </div>\n                    <Image\n                      width=\"40%\"\n                      style={{ borderRadius: '50%' }}\n                      src={this.state.profile_img}\n                    ></Image>\n                    <h3 style={{ fontWeight: 'normal', marginTop: '15px' }}>{this.props.auth?this.props.auth.user.first_name + this.props.auth.user.last_name:\"\"}</h3>\n                    <h6 style={{ color: '#525252', fontSize: '13', fontWeight: 'lighter' }}>{this.props.auth?this.props.auth.user.email:\"\"}</h6>\n                    <div style={{ marginTop: '20px', textAlign: 'justify' }}>\n                    {this.props.auth?this.props.auth.user.bio === ''?\"Hey there. Please Update your profile\":this.props.auth.user.bio:\"Hey there. Please Update your profile\"}\n                        <div style={{ marginTop: '20px', textAlign: 'justify' }}>\n                            <p>{this.props.auth?this.props.auth.user.mobile:\"\"}</p>\n                        </div>\n                    </div>\n                    <Divider />\n                    <div className=\"menu-content h-100\" data-simplebar>\n                        <li className=\"menu-label\">Profile Settings</li>\n                        <ul className=\"metismenu left-sidenav-menu\" style={{ overflow: 'hidden' }}>\n                            <li>\n                                <a onClick={()=>this.handleNav(0)}> <i data-feather=\"home\" className=\"align-self-center menu-icon\"></i><span>Personal Infomation</span><span className=\"menu-arrow\"><i className=\"mdi mdi-chevron-right\" ></i></span></a>\n                            </li>\n                            <li>\n                                <a  onClick={()=>this.handleNav(1)}> <i data-feather=\"home\" className=\"align-self-center menu-icon\"></i><span>Notification</span><span className=\"menu-arrow\"><i className=\"mdi mdi-chevron-right\"></i></span></a>\n                            </li>\n                            <li>\n                                <a  onClick={()=>this.handleNav(2)}> <i data-feather=\"home\" className=\"align-self-center menu-icon\"></i><span>Profile Logs</span><span className=\"menu-arrow\"><i className=\"mdi mdi-chevron-right\"></i></span></a>\n                            </li>\n                            <li>\n                                <a onClick={()=>this.handleNav(1)}> <i data-feather=\"home\" className=\"align-self-center menu-icon\"></i><span>Account Security</span><span className=\"menu-arrow\"><i className=\"mdi mdi-chevron-right\"></i></span></a>\n                            </li>\n                        </ul>\n                    </div>\n                  </Card>\n                </div>\n                <div className=\"col-8\" >\n                    <Card style={{ width: '100%', borderColor: 'white' }}>\n                        {menu}\n                    </Card>\n                </div>\n              </div>\n          </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    isLoading: state.auth.isLoading,\n    auth: state.auth.user\n  });\n  \n\nexport default connect(mapStateToProps,{updateUser})(Profile);\n",["138","139"],"/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Dashboard/Home/Home.js",[],["140","141"],"/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Dashboard/Profile/Logs/Logs.js",[],"/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Accounts/LoginPage/LoginPage.js",["142"],"import React, { Component } from 'react'\nimport Logo from '../../../Assets/logo.svg'\nimport { login } from '../../../Store/Action/auth';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\nimport { message, Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n\n\n// Success Messge Box\nconst success = () => {\n    message.success('This is a success message');\n};\n  \n// Error Message Box\nconst error = (data) => {\n    message.error(data);\n};\n\n// Const to validate email format\nconst email_regex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n\n\nexport class LoginPage extends Component {\n\n    //  Holds the State\n    state = {\n        email: '',\n        password: ''\n    }\n\n    //  Handles the errors and  that hapens after Login\n    onSubmit = (e) => {\n        e.preventDefault();\n        if(this.state.email === '') {error('Email Field is required')}\n        else if(!email_regex.test(this.state.email)) {error('Invalid Email Format')}\n        else if(this.state.password === '') {error('Password Field is required')}\n        else{this.props.login(this.state.email, this.state.password);}\n    };\n\n    //  Recieves new props. Primarily used for Error Handling\n    componentWillReceiveProps(nextProps){\n        if(nextProps.error !== undefined){\n            if(nextProps.error.message === 'Network Error'){\n                error(nextProps.error.message)\n            }else{\n                error(nextProps.error.response.data.error)\n            }\n        }\n    }\n\n    //  Spinner Icon\n    antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n    \n    //  Update State\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n\n    render() {\n        if(this.props.isAuthenticated){\n            this.props.history.goBack()\n        }\n        return (\n            <div className=\"container\">\n                <div className=\"row vh-100 d-flex justify-content-center\">\n                    <div className=\"col-12 align-self-center\">\n                        <div className=\"row\">\n                            <div className=\"col-lg-5 mx-auto\">\n                                <div style={{  boxShadow: '0px 5px 80px 0px #e4e8f0', background: '#fff', width: '400px'}}>\n                                    <div className=\"card-body p-0 auth-header-box\" style={{ backgroundColor: 'white' }}>\n                                        <div className=\"text-center p-3\">\n                                            <a href=\"index.html\" className=\"logo logo-admin\">\n                                                <img src={Logo} height=\"50\" alt=\"logo\" className=\"auth-logo\"/>\n                                            </a>\n                                            <h4 className=\"mt-3 mb-1 font-weight-semibold font-18\" style={{ color: 'black' }}>Let's Get Started</h4>   \n                                            <p className=\"text-muted  mb-0\">Sign in to continue to NextBooks.</p>  \n                                        </div>\n                                    </div>\n                                    <div className=\"card-body p-0\">\n                                        <ul className=\"nav-border nav nav-pills\" role=\"tablist\">\n                                            <li className=\"nav-item\">\n                                                <a className=\"nav-link active font-weight-semibold\" data-toggle=\"tab\" href=\"#LogIn_Tab\" role=\"tab\">Log In</a>\n                                            </li>\n                                        </ul>\n                                        <div className=\"tab-content\">\n                                            <div className=\"tab-pane active p-3\" id=\"LogIn_Tab\" role=\"tabpanel\">                                        \n                                                <form className=\"form-horizontal auth-form\" onSubmit={this.onSubmit}>\n                                                    <div className=\"form-group mb-2 my-3\">\n                                                        <div className=\"input-group\">                                                                                         \n                                                            <input type=\"email\" className=\"form-control\" name=\"email\" id=\"email\" placeholder=\"Email\" value={this.state.email} onChange={this.onChange}/>\n                                                        </div>                                    \n                                                    </div>\n                                                    <div className=\"form-group mb-2 my-3\">\n                                                        <div className=\"input-group\">                                  \n                                                            <input type=\"password\" className=\"form-control\" name=\"password\" id=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.onChange}/>\n                                                        </div>                               \n                                                    </div>\n                                                    <div className=\"form-group form-group mb-0 row my-3\">\n                                                        <div className=\"col-6\" style={{ textAlign: 'center' }}>\n                                                            <Spin indicator={this.antIcon} spinning={this.props.authLoading} style={{ float: 'center' }}/>    \n                                                        </div>\n                                                        <div className=\"col-sm-6 text-right\" >\n                                                            <p className=\"mb-0\">Forgot Password ?  <a href=\"/auth/reset\" className=\"text-primary ml-2\">Reset</a></p>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"form-group mb-0 row\">\n                                                        <div className=\"col-12\">\n                                                            <button className=\"btn btn-primary btn-block waves-effect waves-light\"  type=\"submit\">Log In </button>\n                                                        </div>\n                                                    </div> \n                                                </form>\n                                                <div className=\"m-3 text-center text-muted\">\n                                                    <p className=\"mb-0\">Don't have an account ?  <a href=\"/auth/signup\" className=\"text-primary ml-2\">Resister</a></p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"card-body bg-light-alt text-center\">\n                                        <span className=\"text-muted d-none d-sm-inline-block\">Joan Louji © 2020</span>                                            \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>    \n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    isLoading: state.auth.isLoading,\n    authLoading: state.auth.authLoading,\n    error: state.auth.error\n  });\n  \n\nexport default connect(mapStateToProps, {login})(withRouter(LoginPage));","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Store/Action/auth.js",["143"],"/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Route.js",[],["144","145"],"/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Dashboard/Dashboard.js",["146","147","148","149","150","151","152","153"],"/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/App.js",[],"/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Dashboard/Profile/Information/Information.js",["154","155"],"/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Store/configureStore.js",[],"/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Dashboard/Profile/Security/Security.js",[],"/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Store/Action/types.js",[],"/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Error/404.js",[],"/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Accounts/RegisterPage/RegisterPage.js",["156","157"],"import React, { Component } from 'react'\nimport Logo from '../../../Assets/logo.svg'\nimport { register } from '../../../Store/Action/auth';\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter } from \"react-router\";\nimport { message, Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n\n// Success Messge Box\nconst success = () => {\n    message.success('This is a success message');\n};\n  \n// Error Message Box\nconst error = (data) => {\n    message.error(data);\n};\n\n// Const to validate email format\nconst email_regex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\nString.prototype.isNumber = function(){return /^\\d+$/.test(this);} \n\n\nexport class RegisterPage extends Component {\n\n    //  Holds the State\n    state = {\n        email: '',\n        password: '',\n        first_name: '',\n        last_name: '',\n        mobile: ''\n    }\n\n    //  Handles the errors and  that hapens after Register\n    onSubmit = (e) => {\n        e.preventDefault();\n        if(this.state.first_name === '') {error('First Name Field is required')}\n        else if(this.state.last_name === '') {error('Last Name Field is required')}\n        else if(this.state.mobile === '') {error('Mobile Field is required')}\n        else if(!this.state.mobile.isNumber()) {error('Mobile Number cannot contain text')}\n        else if(this.state.mobile.length !== 10) {error('Invalid Mobile Number. Only Indian Numbers are Valid')}\n        else if(this.state.email === '') {error('Email Field is required')}\n        else if(!email_regex.test(this.state.email)) {error('Invalid Email Format')}\n        else if(this.state.password === '') {error('Password Field is required')}\n        else{\n            const user = {\n                email: this.state.email,\n                password: this.state.password,\n                first_name: this.state.first_name,\n                last_name: this.state.last_name,\n                mobile: this.state.mobile,\n            }\n            this.props.register(user)\n        }\n    };\n\n    //  Recieves new props. Primarily used for Error Handling\n    componentWillReceiveProps(nextProps){\n        if(nextProps.error !== undefined){\n            if(nextProps.error.message === 'Network Error'){\n                error(nextProps.error.message)\n            }else{\n                error(nextProps.error.response.data.error)\n            }\n        }\n    }\n\n    //  Spinner Icon\n    antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n\n    // Update State\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n\n    render() {\n        if(this.props.isAuthenticated){\n            return <Redirect to=\"/books/dashboard\"/>\n        }\n        return (\n            <div className=\"container\">\n                <div className=\"row vh-100 d-flex justify-content-center\">\n                    <div className=\"col-12 align-self-center\">\n                        <div className=\"row\">\n                            <div className=\"col-lg-5 mx-auto\">\n                                <div style={{  boxShadow: '0px 5px 80px 0px #e4e8f0', background: '#fff', width: '400px'}}>\n                                    <div className=\"card-body p-0 auth-header-box\" style={{ backgroundColor: 'white' }}>\n                                        <div className=\"text-center p-3\">\n                                            <a href=\"index.html\" className=\"logo logo-admin\">\n                                                <img src={Logo} height=\"50\" alt=\"logo\" className=\"auth-logo\"/>\n                                            </a>\n                                            <h4 className=\"mt-3 mb-1 font-weight-semibold font-18\" style={{ color: 'black' }}>Let's Get Started</h4>   \n                                            <p className=\"text-muted  mb-0\">Register to continue to NextBooks.</p>  \n                                        </div>\n                                    </div>\n                                    <div className=\"card-body p-0\">\n                                        <ul className=\"nav-border nav nav-pills\" role=\"tablist\">\n                                            <li className=\"nav-item\">\n                                                <a className=\"nav-link active font-weight-semibold\" data-toggle=\"tab\" href=\"#LogIn_Tab\" role=\"tab\">SignUp</a>\n                                            </li>\n                                        </ul>\n                                        <div className=\"tab-content\">\n                                            <div className=\"tab-pane active p-3\" id=\"LogIn_Tab\" role=\"tabpanel\">                                        \n                                                <form className=\"form-horizontal auth-form\" onSubmit={this.onSubmit}>\n                                                  <div className=\"form-group form-group mb-0 row my-3\">\n                                                        <div className=\"col-6\">\n                                                          <div className=\"input-group\">                                                                                         \n                                                              <input type=\"text\" className=\"form-control\" name=\"first_name\" id=\"first_name\" value={this.state.first_name} onChange={this.onChange} placeholder=\"First Name\"/>\n                                                          </div>   \n                                                        </div>\n                                                        <div className=\"col-sm-6 text-right\" >\n                                                          <div className=\"input-group\">                                                                                         \n                                                              <input type=\"text\" className=\"form-control\" name=\"last_name\" id=\"last_name\" value={this.state.last_name} onChange={this.onChange} placeholder=\"Last Name\"/>\n                                                          </div>   \n                                                        </div>\n                                                    </div>\n                                                    <div className=\"form-group mb-2 my-3\">\n                                                        <div className=\"input-group\">                                                                                         \n                                                            <input type=\"number\" className=\"form-control\" name=\"mobile\" id=\"mobile\" value={this.state.mobile} onChange={this.onChange} placeholder=\"Mobile\"/>\n                                                        </div>                                    \n                                                    </div>\n                                                    <div className=\"form-group mb-2 my-3\">\n                                                        <div className=\"input-group\">                                                                                         \n                                                            <input type=\"email\" className=\"form-control\" name=\"email\" id=\"email\" value={this.state.email} onChange={this.onChange} placeholder=\"Email\"/>\n                                                        </div>                                    \n                                                    </div>\n                                                    <div className=\"form-group mb-2 my-3\">\n                                                        <div className=\"input-group\">                                  \n                                                            <input type=\"password\" className=\"form-control\" name=\"password\" id=\"password\" value={this.state.password} onChange={this.onChange} placeholder=\"Password\"/>\n                                                        </div>                               \n                                                    </div>\n                                                    <div className=\"form-group mb-2 my-3\" style={{ textAlign: 'center' }}>\n                                                        <div className=\"input-group\" >                                  \n                                                            <Spin indicator={this.antIcon} spinning={this.props.authLoading} style={{ float: 'center' }}/>                                                         \n                                                        </div>                               \n                                                    </div>\n                                                    <div className=\"form-group my-6 row\">\n                                                        <div className=\"col-12\">\n                                                            <button className=\"btn btn-primary btn-block waves-effect waves-light\"  type=\"submit\">Register</button>\n                                                        </div>\n                                                    </div> \n                                                </form>\n                                                <div className=\"m-3 text-center text-muted\">\n                                                    <p className=\"mb-0\">Don't have an account ?  <a href=\"/auth/login\" className=\"text-primary ml-2\">Login</a></p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"card-body bg-light-alt text-center\">\n                                        <span className=\"text-muted d-none d-sm-inline-block\">Joan Louji © 2020</span>                                            \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>    \n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    isLoading: state.auth.isLoading,\n    authLoading: state.auth.authLoading,\n    error: state.auth.error\n  });\n  \n\nexport default connect(mapStateToProps, {register})(withRouter(RegisterPage));",["158","159"],"/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Accounts/ResetPage/ResetPage.js",[],"/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Accounts/ResetPage/PasswordReset.js",[],["160","161"],"/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Store/Reducer/auth.js",["162","163"],"import {\n    USER_LOADED,\n    USER_LOADING,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    RESET_PASSWORD,\n    CHANGE_PASSWORD,\n    UPDATE_SUCCESS,\n    DEACTIVATE_SUCCESS,\n    AUTH_INIT\n  } from '../Action/types';\n  \n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: false,\n    isLoading: false,\n    authLoading: false,\n    user: null,\n  };\n\n  export default function (state = initialState ,action) {\n    switch (action.type) {\n\n      case USER_LOADED:\n        return {\n          ...state,\n          isAuthenticated: true,\n          isLoading: false,\n          authLoading: false,\n          user: action.payload,\n        };\n      case LOGIN_SUCCESS:\n        localStorage.setItem('token', action.payload.Token);\n        return {\n          ...state,\n          user: action.payload,\n          isAuthenticated: true,\n          authLoading: false,\n          isLoading: false,\n        };\n      case REGISTER_SUCCESS:\n        localStorage.setItem('token', action.payload.Token)\n        return {\n          ...state,\n          user: action.payload,\n          isAuthenticated: true,\n          isLoading: false,\n          authLoading: false\n        };\n      case AUTH_ERROR:\n        return {\n          ...state,\n          error: action.payload,\n          authLoading: false\n        }\n      case LOGIN_FAIL:\n      case LOGOUT_SUCCESS:\n        localStorage.removeItem('token');\n        return{\n          logout: 'SUCCESS',\n          authLoading: false\n        }\n      case RESET_PASSWORD:\n        return{\n          ...state,\n          reset: action.payload,\n          authLoading: false\n        };\n      case CHANGE_PASSWORD:\n        return{\n          ...state,\n          authLoading: false,\n          reset: action.payload\n        };\n      case REGISTER_FAIL:\n        localStorage.removeItem('token');\n        return {\n          ...state,\n          token: null,\n          user: null,\n          isAuthenticated: false,\n          isLoading: false,\n          authLoading: false\n        };\n      case UPDATE_SUCCESS:\n        return{\n          ...state,\n          user: action.payload,\n          isAuthenticated: true,\n          isLoading: false,\n        }\n      case DEACTIVATE_SUCCESS:\n        return{\n          ...state,\n          isAuthenticated: false,\n          isLoading: false\n        }\n      case AUTH_INIT:\n        return{\n          isAuthenticated: false,\n          authLoading: true,\n          user: null,\n        }   \n      default:\n        return state;\n    }\n  }","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Error/401.js",[],["164","165"],"/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/firebase/firebase.js",[],["166","167"],"/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Dashboard/BankAccounts/BankAccount.js",["168","169"],"import React, { Component } from 'react'\nimport AccountComponent from './Component/AccountComponent'\nimport { Row, Col, Modal, Input, Button, Select, message } from 'antd';\nimport { connect } from 'react-redux';\nimport { loadAccount, addAccount } from '../../../Store/Action/account'\n\n// Success Messge Box\nconst success = () => {\n    message.success('This is a success message');\n};\n  \n// Error Message Box\nconst error = (data) => {\n    message.error(data);\n};\nexport class BankAccount extends Component {\n\n    //  Holds all the State varialbles\n    state = {\n        visible: false,\n        account_name: '',\n        account_type: 'cash_account',\n        initialBalance: '',\n        account_provider: '',\n        account_id: '',\n        account: []\n    }\n\n    //  Constructor\n    constructor(props){\n        super(props)\n    }\n\n    //  Fired when the component gets loaded\n    componentDidMount(){\n        this.props.loadAccount()\n        this.setState({ account: this.props.account })\n    }\n\n    //  Fired when the component recieves new props\n    componentWillReceiveProps(nextProps){\n        if(nextProps.error !== undefined){\n            if(nextProps.error.message === 'Network Error'){\n                error(nextProps.error.message)\n                this.setState({ account: nextProps.account })\n            }else{\n                this.setState({ account: nextProps.account })\n                error(nextProps.error.response.data.error)\n            }\n        }\n        this.setState({ account: nextProps.account })\n    }\n\n    //  Handles the things that happen after clicking Add a new Account\n    handleAddAccount(){\n        if(this.state.account_id === ''){error('Account Number can not be Empty')}\n        else if(this.state.account_name === ''){error('Account Name can not be Empty')}\n        else if(this.state.initialBalance === ''){error('Initial balance can not be Empty')}\n        else if(this.state.account_provider === ''){error('Account Provider can not be Empty')}\n        else{\n            this.props.addAccount(this.state.account_id, this.state.account_name, this.state.account_type, this.state.initialBalance, this.state.account_provider)\n            this.setState({visible: false})\n        }\n    }\n\n    //  Onchage for normal Input and Dropdown Input\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n    onDropDownChange = (e) => this.setState({ account_type: e });\n\n    render() {\n        return (\n          <div className=\"container-fluid\">\n              {/* BreadCrumps */}\n             <div className=\"row\">\n                <div className=\"col-lg-6\">\n                    <div className=\"page-title-box\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <h4 className=\"page-title\">Accounts</h4>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-lg-6\">\n                    <Button type=\"primary\" style={{ float: 'right' , marginRight: '100px'}} onClick={()=>this.setState({visible: true})}>Add a Account</Button>\n                </div>\n              </div>\n              {/* Content */}\n              <div>\n                <Row>\n                    {this.state.account ? this.state.account.length === 0?\n                        <div style={{ display: 'flex', position: 'absolute', right: '0', left: '0' }}>\n                            <img  src=\"https://firebasestorage.googleapis.com/v0/b/nextbooks-1a9f0.appspot.com/o/images%2FNo%20data-pana.png?alt=media&token=cb5cea24-210c-48cd-bc65-8875b00fb5b8\" style={{ width: '30%', height: '50%', margin: 'auto' }} alt=\"user_photo\"></img>\n                        </div>\n                    :\n                        this.state.account?this.state.account.map((data,i)=>{\n                            return(\n                                <Col span={5} style={{ padding: '10px' }}>\n                                    <AccountComponent key={data._id} account={data}/>                    \n                                </Col>\n                            )\n                        }):\"No data\"\n                    :\"\"}\n                </Row>\n                <Modal\n                    title=\"Add a New Account\"\n                    centered\n                    visible={this.state.visible}\n                    okText=\"Add Account\"\n                    onOk={() => this.handleAddAccount()}\n                    onCancel={() => this.setState({visible: false})}\n                    width={500}\n                >\n                    <Input placeholder=\"Account Number\" name=\"account_id\" style={{ margin: '10px' }} value={this.state.account_id} onChange={this.onChange}></Input>\n                    <Input placeholder=\"Account Name\" name=\"account_name\" style={{ margin: '10px' }} value={this.state.account_name} onChange={this.onChange}></Input>\n                    <Select name=\"account_type\" style={{ width: '100%',margin: '10px' }} value={this.state.account_type} placeholder=\"Account Type\" onSelect={(val,eve)=>this.onDropDownChange(val)}>\n                        <Select.Option name=\"account_type\" value=\"cash_account\">Cash Account</Select.Option>\n                        <Select.Option name=\"account_type\" value=\"bank_account\">Bank Account</Select.Option>\n                        <Select.Option  name=\"account_type\" value=\"wallet_account\">Wallet Account</Select.Option>\n                    </Select>                    \n                    <Input placeholder=\"Initial Balance\" value={this.state.initialBalance} name=\"initialBalance\" type=\"number\" onChange={this.onChange} prefix={<i className=\"mdi mdi-cash\" style={{ color: 'grey' }}></i>} style={{ margin: '10px' }}></Input>\n                    <Input placeholder=\"Provider eg. Indian Bank, Paytm\" value={this.state.account_provider} name=\"account_provider\" onChange={this.onChange} style={{ margin: '10px' }}></Input>\n                </Modal>\n              </div>\n          </div>\n        )\n    }\n  \n}\n\nconst mapStateToProps = (state) => ({\n    isLoading: state.auth.isLoading,\n    account: state.account.account,\n    error: state.account.error\n  });\n  \n\nexport default connect(mapStateToProps,{loadAccount,addAccount})(BankAccount);\n","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Dashboard/BankAccounts/Component/AccountComponent.js",["170","171"],"/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Store/Reducer/index.js",[],"/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Store/Reducer/account.js",["172","173"],"import {\n    ACCOUNTS_LOADED,\n    ACCOUNT_CREATED,\n    ACCOUNT_UPDATED,\n    ACCOUNT_ERROR\n  } from '../Action/types';\n  \n  const initialState = {\n    token: localStorage.getItem('token'),\n    isLoading: false,\n    account: null,\n  };\n\n  export default function (state = initialState ,action) {\n    switch (action.type) {\n\n      case ACCOUNTS_LOADED:\n        return {\n            isLoading: false,\n            account: action.payload.accounts,\n        }; \n      case ACCOUNT_CREATED:\n        return{\n            isLoading: false,\n            account: state.account.concat(action.payload.accounts)\n        }\n      case ACCOUNT_UPDATED:\n          return {\n                isLoading: false,\n                account: state.account.map((data,index)=> data._id === action.payload.accounts._id ? action.payload.accounts : data)\n            }\n      case ACCOUNT_ERROR: {\n        return {\n            ...state,\n            error: action.payload,\n            isLoading: false\n          }\n      }\n      default:\n        return state;\n    }\n  }","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Store/Action/account.js",[],"/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Dashboard/Transcation/Transcation.js",["174","175","176","177","178","179","180","181"],"import React, { Component } from 'react'\nimport { Row, Col, Button, message, Modal, Input, Checkbox, Select } from 'antd';\nimport { connect } from 'react-redux';\nimport { loadTranscation, addTranscation, deleteTranscation, updateTranscation } from '../../../Store/Action/transcation'\nimport { loadAccount } from '../../../Store/Action/account'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport  moment  from 'moment';\n\n// Success Messge Box\nconst success = () => {\n    message.success('This is a success message');\n};\n  \n// Error Message Box\nconst error = (data) => {\n    message.error(data);\n};\n\nexport class Transcation extends Component {\n\n    //  Holds all the State variables\n    state = {\n        transcations: [],\n        visible: false,\n        visibleEdit: false,\n        description: '',\n        category: '',\n        transcation_type: '',\n        amount: '',\n        account_type: '',\n        debit: false,\n        id: ''\n    }\n\n    //  Gets excecuted once the component gets Mounted\n    componentDidMount(){\n        this.props.loadAccount()\n        this.props.loadTranscation()\n        this.setState({\n            transcations: this.props.transcation\n        })\n    }\n\n    //  Fired when the component recieves new props\n    componentWillReceiveProps(nextProps){\n        if(nextProps.error !== undefined){\n            if(nextProps.error.message === 'Network Error'){\n                error(nextProps.error.message)\n                this.setState({ transcations: nextProps.transcation })\n            }else{\n                this.setState({ transcations: nextProps.transcation })\n                error(nextProps.error.response.data.error)\n            }\n        }\n        this.setState({ transcations: nextProps.transcation })\n    }\n\n    //  Handles the things that happen after clicking Add a new Transcation\n    handleAddAccount(){\n        if(this.state.description === ''){error('Description can not be Empty')}\n        else if(this.state.category === ''){error('Category can not be Empty')}\n        else if(this.state.transcation_type === ''){error('Transcation Type can not be Empty')}\n        else if(this.state.amount === ''){error('Amount can not be Empty')}\n        else if(this.state.account_type === ''){error('Account Type can not be Empty')}\n        else{\n            console.log(this.state.description, this.state.category, this.state.transcation_type, this.state.amount, this.state.account_type)\n            this.props.addTranscation(this.state.description, this.state.transcation_type, this.state.amount, this.state.account_type, this.state.debit, this.state.category)\n            this.setState({visible: false})\n        }\n    }\n\n    //  Handles delete\n    handleDelete(id){\n        this.props.deleteTranscation(id)\n    }\n\n    //  Onchage for normal Input, CheckBox Input and Dropdown Input\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n    onDropDownChange = (e) => this.setState({ account_type: e });\n    onCheckBoxChange = (e) => this.setState({ [e.target.name]: e.target.checked });\n\n\n    //  Handles the things that happen after clicking Edit Account\n    handleEditTranscation(){\n        if(this.state.description === ''){error('Description can not be Empty')}\n        else if(this.state.category === ''){error('Category can not be Empty')}\n        else if(this.state.transcation_type === ''){error('Transcation Type can not be Empty')}\n        else if(this.state.amount === ''){error('Amount can not be Empty')}\n        else{\n            this.props.updateTranscation(this.state.id, this.state.debit, this.state.description, this.state.category, this.state.account_type, this.state.transcation_type, this.state.amount)\n            this.setState({visibleEdit: false})\n        }     \n    }\n\n    render() {\n        return (\n          <div className=\"container-fluid\">\n            <Row>\n                <Col span={12}>\n                    {/* BreadCrumps */}\n                    <div className=\"row\">\n                        <div className=\"col-lg-6\">\n                            <div className=\"page-title-box\">\n                                <div className=\"row\">\n                                    <div className=\"col\">\n                                        <h4 className=\"page-title\">Transcations</h4>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Col>\n                <Col span={12}>\n                    <div className=\"nav-link\" style={{ float: 'right', marginRight: '100px',cursor: 'pointer' }} onClick={()=>this.setState({visible: true})}>\n                        <a className=\" btn btn-sm btn-soft-primary\" style={{ width: '130px', height: '30px' }} role=\"button\"><i className=\"fas fa-plus mr-2\"></i>New Expense</a>\n                    </div>    \n                </Col>\n            </Row>\n            <div style={{ padding: '50px' }}>\n                <TableContainer>\n                    <Table  aria-label=\"simple table\">\n                        <TableHead style={{ backgroundColor: '#f4f8ff' }}>\n                            <TableRow>\n                                <TableCell>Date</TableCell>\n                                <TableCell align=\"center\">Debit</TableCell>\n                                <TableCell align=\"center\">Amount</TableCell>\n                                <TableCell align=\"center\">Description</TableCell>\n                                <TableCell align=\"center\">Category</TableCell>\n                                <TableCell align=\"center\">Transcation Type</TableCell>\n                                <TableCell align=\"center\">From Account</TableCell>\n                                <TableCell align=\"center\">Category</TableCell>\n                                <TableCell align=\"center\">Actions</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        {this.state.transcations ?this.state.transcations.length === 0?\n                                    <div style={{ display: 'flex', position: 'absolute', right: '0', left: '0' }}>\n                                            <img  src=\"https://firebasestorage.googleapis.com/v0/b/nextbooks-1a9f0.appspot.com/o/images%2FNo%20data-pana.png?alt=media&token=cb5cea24-210c-48cd-bc65-8875b00fb5b8\" style={{ width: '30%', height: '50%', margin: 'auto' }} alt=\"user_photo\"></img>\n                                    </div>\n                                :\n                                <TableBody>\n                                    {this.state.transcations?this.state.transcations.map((row) => (\n                                        <TableRow key={row._id}>\n                                        <TableCell component=\"th\" scope=\"row\">{moment(row.createdAt).format('LLL')}</TableCell>\n                                        <TableCell align=\"center\">{row.debit?\"Debit\":\"Credit\"}</TableCell>\n                                        <TableCell align=\"center\">{row.amount}</TableCell>\n                                        <TableCell align=\"center\">{row.description}</TableCell>\n                                        <TableCell align=\"center\">{row.category}</TableCell>\n                                        <TableCell align=\"center\">{row.transcation_type}</TableCell>\n                                        <TableCell align=\"center\">{row.account.account_name}</TableCell>\n                                        <TableCell align=\"center\">{row.category}</TableCell>\n                                        <TableCell align=\"center\"><Button type=\"primary\" style={{margin: '10px'}} onClick={()=>this.setState({visibleEdit: true, description: row.description, category: row.category, transcation_type: row.transcation_type, debit: row.debit, amount: row.amount, id: row._id, account_type: row.account.account_id})}>Update</Button><Button type=\"danger\" style={{margin: '10px'}}  onClick={()=>this.handleDelete(row._id)}>Delete</Button></TableCell>\n                                        </TableRow>\n                                    )):\"Loading\"}\n                                </TableBody>                                \n                            :\"\"}\n                    </Table>\n                </TableContainer>\n            </div>\n                <Modal\n                    title=\"Update Transcation\"\n                    centered\n                    visible={this.state.visibleEdit}\n                    okText=\"Update Transcation\"\n                    onOk={() => this.handleEditTranscation()}\n                    onCancel={() => this.setState({visibleEdit: false})}\n                    width={500}\n                >\n                    <Input placeholder=\"Description\" name=\"description\" type=\"text\" placeholder={this.state.description} onChange={this.onChange} style={{ margin: '10px' }}></Input>\n                    <Input placeholder=\"Category\" name=\"category\" type=\"text\" placeholder={this.state.category} onChange={this.onChange} style={{ margin: '10px' }}></Input>\n                    <Input placeholder=\"Transcation Type\" name=\"transcation_type\" type=\"text\" placeholder={this.state.transcation_type} onChange={this.onChange} style={{ margin: '10px' }}></Input>\n                    <Input placeholder=\"Amount\" name=\"amount\" type=\"text\" onChange={this.onChange} style={{ margin: '10px' }} placeholder={this.state.amount}></Input>\n                    <Checkbox name=\"debit\" checked={this.state.debit} onChange={(e)=>this.onCheckBoxChange(e)}  style={{ margin: '10px' }} name=\"debit\">Debit</Checkbox>\n                    <Select defaultValue={this.state.account_type} name=\"account\" style={{ width: '100%',margin: '10px' }} value={this.state.account_type} placeholder=\"Account\" onSelect={(val,eve)=>this.onDropDownChange(val)}>\n                        {this.props.account?this.props.account.map((data)=>{\n                            return (\n                                <Select.Option name=\"account_type\"  value={data.account_id}>{data.account_name}</Select.Option>\n                            )\n                        }):\"\"}\n                    </Select> \n                </Modal>\n                <Modal\n                    title=\"Add a New Transcation\"\n                    centered\n                    visible={this.state.visible}\n                    okText=\"Add Transcation\"\n                    onOk={() => this.handleAddAccount()}\n                    onCancel={() => this.setState({visible: false})}\n                    width={500}\n                >   \n                    <Input placeholder=\"Description\" name=\"description\" type=\"text\" onChange={this.onChange} style={{ margin: '10px' }}></Input>\n                    <Input placeholder=\"Category\" name=\"category\" type=\"text\" onChange={this.onChange} style={{ margin: '10px' }}></Input>\n                    <Input placeholder=\"Transcation Type\" name=\"transcation_type\" type=\"text\" onChange={this.onChange} style={{ margin: '10px' }}></Input>\n                    <Input placeholder=\"Amount\" name=\"amount\" type=\"text\" onChange={this.onChange} style={{ margin: '10px' }}></Input>\n                    <Checkbox name=\"debit\" checked={this.state.debit} onChange={(e)=>this.onCheckBoxChange(e)}  style={{ margin: '10px' }} name=\"debit\">Debit</Checkbox>\n                    <Select name=\"account\" style={{ width: '100%',margin: '10px' }} value={this.state.account_type} placeholder=\"Account\" onSelect={(val,eve)=>this.onDropDownChange(val)}>\n                        {this.props.account?this.props.account.map((data)=>{\n                            console.log(data)\n                            return (\n                                <Select.Option name=\"account_type\" value={data.account_id}>{data.account_name}</Select.Option>\n                            )\n                        }):\"\"}\n                    </Select> \n                </Modal>\n          </div>\n        )\n    }\n  \n}\n\nconst mapStateToProps = (state) => ({\n    isLoading: state.auth.isLoading,\n    transcation: state.transcation.transcation,\n    account: state.account.account,\n    error: state.transcation.error\n  });\n  \n\nexport default connect(mapStateToProps,{loadTranscation, loadAccount, addTranscation, deleteTranscation, updateTranscation})(Transcation);\n","/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Store/Action/transcation.js",[],"/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Store/Reducer/transcation.js",["182","183"],"import {\n    TRANSCATION_LOADED,\n    TRANSCATION_LOADING,\n    TRANSCATION_CREATED,\n    TRANSCATION_DELETED,\n    TRANSCATION_UPDATED,\n    TRANSCATION_ERROR\n  } from '../Action/types';\n  \n  const initialState = {\n    token: localStorage.getItem('token'),\n    isLoading: false,\n    transcation: null,\n  };\n\n  export default function (state = initialState ,action) {\n    switch (action.type) {\n\n      case TRANSCATION_LOADED:\n        return {\n            isLoading: false,\n            transcation: action.payload.transcations.sort((a,b)=> a.createdAt - b.createdAt).reverse(),\n        }; \n      case TRANSCATION_CREATED:\n        return{\n            isLoading: false,\n            transcation: state.transcation.sort((a,b)=> a.createdAt - b.createdAt).reverse().concat(action.payload.transcations).sort((a,b)=> a.createdAt - b.createdAt).reverse(),\n        }\n      case TRANSCATION_DELETED:\n          return{\n              isLoading: false,\n              transcation: state.transcation.filter(data => data._id !== action.payload.transcations._id)\n          }\n      case TRANSCATION_UPDATED:\n          return {\n                isLoading: false,\n                transcation: state.transcation.map((data,index)=> data._id === action.payload.transcations._id ? action.payload.transcations : data)\n            }\n      case TRANSCATION_ERROR: {\n        return {\n            ...state,\n            error: action.payload,\n            isLoading: false\n          }\n      }\n      default:\n        return state;\n    }\n  }",{"ruleId":"184","severity":1,"message":"185","line":1,"column":8,"nodeType":"186","messageId":"187","endLine":1,"endColumn":11},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":135,"column":33,"nodeType":"194","endLine":135,"endColumn":68},{"ruleId":"192","severity":1,"message":"193","line":138,"column":33,"nodeType":"194","endLine":138,"endColumn":69},{"ruleId":"192","severity":1,"message":"193","line":141,"column":33,"nodeType":"194","endLine":141,"endColumn":69},{"ruleId":"192","severity":1,"message":"193","line":144,"column":33,"nodeType":"194","endLine":144,"endColumn":68},{"ruleId":"188","replacedBy":"195"},{"ruleId":"190","replacedBy":"196"},{"ruleId":"188","replacedBy":"197"},{"ruleId":"190","replacedBy":"198"},{"ruleId":"184","severity":1,"message":"199","line":11,"column":7,"nodeType":"186","messageId":"187","endLine":11,"endColumn":14},{"ruleId":"184","severity":1,"message":"200","line":156,"column":9,"nodeType":"186","messageId":"187","endLine":156,"endColumn":15},{"ruleId":"188","replacedBy":"201"},{"ruleId":"190","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":18,"column":5,"nodeType":"205","messageId":"206","endLine":20,"endColumn":6},{"ruleId":"192","severity":1,"message":"193","line":77,"column":33,"nodeType":"194","endLine":77,"endColumn":85},{"ruleId":"192","severity":1,"message":"193","line":82,"column":33,"nodeType":"194","endLine":82,"endColumn":84},{"ruleId":"192","severity":1,"message":"193","line":87,"column":33,"nodeType":"194","endLine":87,"endColumn":87},{"ruleId":"192","severity":1,"message":"207","line":99,"column":33,"nodeType":"194","endLine":100,"endColumn":81},{"ruleId":"192","severity":1,"message":"193","line":104,"column":37,"nodeType":"194","endLine":104,"endColumn":113},{"ruleId":"192","severity":1,"message":"193","line":106,"column":37,"nodeType":"194","endLine":109,"endColumn":44},{"ruleId":"192","severity":1,"message":"207","line":121,"column":37,"nodeType":"194","endLine":121,"endColumn":104},{"ruleId":"184","severity":1,"message":"199","line":9,"column":7,"nodeType":"186","messageId":"187","endLine":9,"endColumn":14},{"ruleId":"208","severity":1,"message":"209","line":133,"column":71,"nodeType":"210","endLine":133,"endColumn":79},{"ruleId":"184","severity":1,"message":"199","line":10,"column":7,"nodeType":"186","messageId":"187","endLine":10,"endColumn":14},{"ruleId":"211","severity":1,"message":"212","line":21,"column":1,"nodeType":"213","messageId":"214","endLine":21,"endColumn":67},{"ruleId":"188","replacedBy":"215"},{"ruleId":"190","replacedBy":"216"},{"ruleId":"188","replacedBy":"217"},{"ruleId":"190","replacedBy":"218"},{"ruleId":"184","severity":1,"message":"219","line":3,"column":5,"nodeType":"186","messageId":"187","endLine":3,"endColumn":17},{"ruleId":"220","severity":1,"message":"221","line":25,"column":3,"nodeType":"222","endLine":111,"endColumn":4},{"ruleId":"188","replacedBy":"223"},{"ruleId":"190","replacedBy":"224"},{"ruleId":"188","replacedBy":"225"},{"ruleId":"190","replacedBy":"226"},{"ruleId":"184","severity":1,"message":"199","line":8,"column":7,"nodeType":"186","messageId":"187","endLine":8,"endColumn":14},{"ruleId":"203","severity":1,"message":"204","line":30,"column":5,"nodeType":"205","messageId":"206","endLine":32,"endColumn":6},{"ruleId":"192","severity":1,"message":"207","line":104,"column":41,"nodeType":"194","endLine":104,"endColumn":83},{"ruleId":"192","severity":1,"message":"207","line":109,"column":41,"nodeType":"194","endLine":109,"endColumn":137},{"ruleId":"184","severity":1,"message":"227","line":4,"column":5,"nodeType":"186","messageId":"187","endLine":4,"endColumn":20},{"ruleId":"220","severity":1,"message":"221","line":15,"column":3,"nodeType":"222","endLine":43,"endColumn":4},{"ruleId":"184","severity":1,"message":"199","line":15,"column":7,"nodeType":"186","messageId":"187","endLine":15,"endColumn":14},{"ruleId":"192","severity":1,"message":"193","line":120,"column":25,"nodeType":"194","endLine":120,"endColumn":126},{"ruleId":"208","severity":1,"message":"209","line":173,"column":85,"nodeType":"210","endLine":173,"endColumn":121},{"ruleId":"208","severity":1,"message":"209","line":174,"column":79,"nodeType":"210","endLine":174,"endColumn":112},{"ruleId":"208","severity":1,"message":"209","line":175,"column":95,"nodeType":"210","endLine":175,"endColumn":136},{"ruleId":"208","severity":1,"message":"209","line":176,"column":127,"nodeType":"210","endLine":176,"endColumn":158},{"ruleId":"208","severity":1,"message":"209","line":177,"column":140,"nodeType":"210","endLine":177,"endColumn":152},{"ruleId":"208","severity":1,"message":"209","line":199,"column":140,"nodeType":"210","endLine":199,"endColumn":152},{"ruleId":"184","severity":1,"message":"228","line":3,"column":5,"nodeType":"186","messageId":"187","endLine":3,"endColumn":24},{"ruleId":"220","severity":1,"message":"221","line":16,"column":3,"nodeType":"222","endLine":49,"endColumn":4},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["229"],"no-negated-in-lhs",["230"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["229"],["230"],["229"],["230"],"'success' is assigned a value but never used.","'config' is assigned a value but never used.",["229"],["230"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-extend-native","String prototype is read only, properties should not be added.","AssignmentExpression","unexpected",["229"],["230"],["229"],["230"],"'USER_LOADING' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["229"],["230"],["229"],["230"],"'ACCOUNT_DELETED' is defined but never used.","'TRANSCATION_LOADING' is defined but never used.","no-global-assign","no-unsafe-negation"]