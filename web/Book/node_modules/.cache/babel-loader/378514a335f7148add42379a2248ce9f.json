{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Dashboard/Transcation/Transcation.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Button, message, Modal, Input, Checkbox, Select } from 'antd';\nimport { connect } from 'react-redux';\nimport { loadTranscation } from '../../../Store/Action/transcation';\nimport { loadAccount } from '../../../Store/Action/account';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport moment from 'moment'; // Success Messge Box\n\nconst success = () => {\n  message.success('This is a success message');\n}; // Error Message Box\n\n\nconst error = data => {\n  message.error(data);\n};\n\nexport class Transcation extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      transcations: [],\n      visible: false,\n      description: '',\n      category: '',\n      transcation_type: '',\n      amount: '',\n      account_type: ''\n    };\n\n    this.onChange = e => this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    this.onDropDownChange = e => this.setState({\n      account_type: e\n    });\n  }\n\n  componentDidMount() {\n    this.props.loadAccount();\n    this.props.loadTranscation();\n    this.setState({\n      transcations: this.props.transcation\n    });\n  } //  Fired when the component recieves new props\n\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.error !== undefined) {\n      if (nextProps.error.message === 'Network Error') {\n        error(nextProps.error.message);\n        this.setState({\n          transcations: nextProps.transcation\n        });\n      } else {\n        this.setState({\n          transcations: nextProps.transcation\n        });\n        error(nextProps.error.response.data.error);\n      }\n    }\n\n    this.setState({\n      transcations: nextProps.transcation\n    });\n  } //  Handles the things that happen after clicking Add a new Account\n\n\n  handleAddAccount() {\n    console.log(this.state.account_type);\n    this.setState({\n      visible: false\n    }); // if(this.state.account_id === ''){error('Account Number can not be Empty')}\n    // else if(this.state.account_name === ''){error('Account Name can not be Empty')}\n    // else if(this.state.initialBalance === ''){error('Initial balance can not be Empty')}\n    // else if(this.state.account_provider === ''){error('Account Provider can not be Empty')}\n    // else{\n    //     this.props.addAccount(this.state.account_id, this.state.account_name, this.state.account_type, this.state.initialBalance, this.state.account_provider)\n    //     this.setState({visible: false})\n    // }\n  } //  Handles delete\n\n\n  handleDelete(id) {// this.props.deleteAccount(id)\n  } //  Onchage for normal Input and Dropdown Input\n\n\n  render() {\n    console.log(this.state.transcations);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"page-title-box\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col\",\n                    children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"page-title\",\n                      children: \"Transcations\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            style: {\n              float: 'right',\n              marginRight: '100px'\n            },\n            onClick: () => this.setState({\n              visible: true\n            }),\n            children: \"Add a Transcation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '50px'\n        },\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            \"aria-label\": \"simple table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              style: {\n                backgroundColor: '#f4f8ff'\n              },\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Debit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Transcation Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"From Account\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: this.state.transcations ? this.state.transcations.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: moment(row.createdAt).format('LLL')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: row.debit ? \"Debit\" : \"Credit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: row.amount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: row.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: row.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: row.transcation_type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: row.account.account_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: row.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 29\n                }, this)]\n              }, row._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 29\n              }, this)) : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"Add a New Account\",\n        centered: true,\n        visible: this.state.visible,\n        okText: \"Add Account\",\n        onOk: () => this.handleAddAccount(),\n        onCancel: () => this.setState({\n          visible: false\n        }),\n        width: 500,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Description\",\n          name: \"description\",\n          type: \"text\",\n          onChange: this.onChange,\n          style: {\n            margin: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Category\",\n          name: \"category\",\n          type: \"text\",\n          onChange: this.onChange,\n          style: {\n            margin: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Transcation Type\",\n          name: \"transcation_type\",\n          type: \"text\",\n          onChange: this.onChange,\n          style: {\n            margin: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Amount\",\n          name: \"amount\",\n          type: \"text\",\n          onChange: this.onChange,\n          style: {\n            margin: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          style: {\n            margin: '10px'\n          },\n          name: \"debit\",\n          children: \"Debit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          name: \"account\",\n          style: {\n            width: '100%',\n            margin: '10px'\n          },\n          value: this.state.account_type,\n          placeholder: \"Account\",\n          onSelect: (val, eve) => this.onDropDownChange(val),\n          children: this.props.account ? this.props.account.map(data => {\n            console.log(data);\n            return /*#__PURE__*/_jsxDEV(Select.Option, {\n              name: \"account_type\",\n              value: data.account_id,\n              children: data.account_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 33\n            }, this);\n          }) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isLoading: state.auth.isLoading,\n  transcation: state.transcation.transcation,\n  account: state.account.account\n});\n\nexport default connect(mapStateToProps, {\n  loadTranscation,\n  loadAccount\n})(Transcation);","map":{"version":3,"sources":["/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Dashboard/Transcation/Transcation.js"],"names":["React","Component","Row","Col","Button","message","Modal","Input","Checkbox","Select","connect","loadTranscation","loadAccount","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","moment","success","error","data","Transcation","state","transcations","visible","description","category","transcation_type","amount","account_type","onChange","e","setState","target","name","value","onDropDownChange","componentDidMount","props","transcation","componentWillReceiveProps","nextProps","undefined","response","handleAddAccount","console","log","handleDelete","id","render","float","marginRight","padding","backgroundColor","map","row","createdAt","format","debit","account","account_name","_id","margin","width","val","eve","account_id","mapStateToProps","isLoading","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Row, Col, Button, message, Modal, Input, Checkbox, Select } from 'antd';\nimport { connect } from 'react-redux';\nimport { loadTranscation } from '../../../Store/Action/transcation'\nimport { loadAccount } from '../../../Store/Action/account'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport  moment  from 'moment';\n\n// Success Messge Box\nconst success = () => {\n    message.success('This is a success message');\n};\n  \n// Error Message Box\nconst error = (data) => {\n    message.error(data);\n};\n\nexport class Transcation extends Component {\n\n    state = {\n        transcations: [],\n        visible: false,\n        description: '',\n        category: '',\n        transcation_type: '',\n        amount: '',\n        account_type: '',\n    }\n\n    componentDidMount(){\n        this.props.loadAccount()\n        this.props.loadTranscation()\n        this.setState({\n            transcations: this.props.transcation\n        })\n    }\n\n    //  Fired when the component recieves new props\n    componentWillReceiveProps(nextProps){\n        if(nextProps.error !== undefined){\n            if(nextProps.error.message === 'Network Error'){\n                error(nextProps.error.message)\n                this.setState({ transcations: nextProps.transcation })\n            }else{\n                this.setState({ transcations: nextProps.transcation })\n                error(nextProps.error.response.data.error)\n            }\n        }\n        this.setState({ transcations: nextProps.transcation })\n    }\n\n    //  Handles the things that happen after clicking Add a new Account\n    handleAddAccount(){\n        console.log(this.state.account_type)\n            this.setState({visible: false})\n        // if(this.state.account_id === ''){error('Account Number can not be Empty')}\n        // else if(this.state.account_name === ''){error('Account Name can not be Empty')}\n        // else if(this.state.initialBalance === ''){error('Initial balance can not be Empty')}\n        // else if(this.state.account_provider === ''){error('Account Provider can not be Empty')}\n        // else{\n        //     this.props.addAccount(this.state.account_id, this.state.account_name, this.state.account_type, this.state.initialBalance, this.state.account_provider)\n        //     this.setState({visible: false})\n        // }\n    }\n\n    //  Handles delete\n    handleDelete(id){\n        // this.props.deleteAccount(id)\n    }\n\n    //  Onchage for normal Input and Dropdown Input\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n    onDropDownChange = (e) => this.setState({ account_type: e });\n\n    render() {\n        console.log(this.state.transcations)\n        return (\n          <div className=\"container-fluid\">\n            <Row>\n                <Col span={12}>\n                    {/* BreadCrumps */}\n                    <div className=\"row\">\n                        <div className=\"col-lg-6\">\n                            <div className=\"page-title-box\">\n                                <div className=\"row\">\n                                    <div className=\"col\">\n                                        <h4 className=\"page-title\">Transcations</h4>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Col>\n                <Col span={12}>\n                    <Button type=\"primary\" style={{ float: 'right', marginRight: '100px' }} onClick={()=>this.setState({visible: true})}>Add a Transcation</Button>\n                </Col>\n            </Row>\n            <div style={{ padding: '50px' }}>\n                <TableContainer>\n                    <Table  aria-label=\"simple table\">\n                        <TableHead style={{ backgroundColor: '#f4f8ff' }}>\n                            <TableRow>\n                                <TableCell>Date</TableCell>\n                                <TableCell align=\"center\">Debit</TableCell>\n                                <TableCell align=\"center\">Amount</TableCell>\n                                <TableCell align=\"center\">Description</TableCell>\n                                <TableCell align=\"center\">Category</TableCell>\n                                <TableCell align=\"center\">Transcation Type</TableCell>\n                                <TableCell align=\"center\">From Account</TableCell>\n                                <TableCell align=\"center\">Category</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        {this.state.transcations?this.state.transcations.map((row) => (\n                            <TableRow key={row._id}>\n                            <TableCell component=\"th\" scope=\"row\">{moment(row.createdAt).format('LLL')}</TableCell>\n                            <TableCell align=\"center\">{row.debit?\"Debit\":\"Credit\"}</TableCell>\n                            <TableCell align=\"center\">{row.amount}</TableCell>\n                            <TableCell align=\"center\">{row.description}</TableCell>\n                            <TableCell align=\"center\">{row.category}</TableCell>\n                            <TableCell align=\"center\">{row.transcation_type}</TableCell>\n                            <TableCell align=\"center\">{row.account.account_name}</TableCell>\n                            <TableCell align=\"center\">{row.category}</TableCell>\n                            </TableRow>\n                        )):\"\"}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n                <Modal\n                    title=\"Add a New Account\"\n                    centered\n                    visible={this.state.visible}\n                    okText=\"Add Account\"\n                    onOk={() => this.handleAddAccount()}\n                    onCancel={() => this.setState({visible: false})}\n                    width={500}\n                >   \n                    <Input placeholder=\"Description\" name=\"description\" type=\"text\" onChange={this.onChange} style={{ margin: '10px' }}></Input>\n                    <Input placeholder=\"Category\" name=\"category\" type=\"text\" onChange={this.onChange} style={{ margin: '10px' }}></Input>\n                    <Input placeholder=\"Transcation Type\" name=\"transcation_type\" type=\"text\" onChange={this.onChange} style={{ margin: '10px' }}></Input>\n                    <Input placeholder=\"Amount\" name=\"amount\" type=\"text\" onChange={this.onChange} style={{ margin: '10px' }}></Input>\n                    <Checkbox style={{ margin: '10px' }} name=\"debit\">Debit</Checkbox>\n                    <Select name=\"account\" style={{ width: '100%',margin: '10px' }} value={this.state.account_type} placeholder=\"Account\" onSelect={(val,eve)=>this.onDropDownChange(val)}>\n                        {this.props.account?this.props.account.map((data)=>{\n                            console.log(data)\n                            return (\n                                <Select.Option name=\"account_type\" value={data.account_id}>{data.account_name}</Select.Option>\n                            )\n                        }):\"\"}\n                    </Select> \n                </Modal>\n          </div>\n        )\n    }\n  \n}\n\nconst mapStateToProps = (state) => ({\n    isLoading: state.auth.isLoading,\n    transcation: state.transcation.transcation,\n    account: state.account.account\n  });\n  \n\nexport default connect(mapStateToProps,{loadTranscation, loadAccount})(Transcation);\n"]},"metadata":{},"sourceType":"module"}