{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Dashboard/Profile/Logs/Logs.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { Button } from 'antd';\nimport { DownloadOutlined } from '@ant-design/icons';\nimport { jsPDF } from 'jspdf';\nexport class Logs extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDownload = this.handleDownload.bind(this);\n  }\n\n  handleDownload() {\n    console.log('working');\n    const title = \"You Activity Report\";\n    const headers = [[\"ID\", \"AGENT\", \"IP\", \"DATE\"]];\n    const marginLeft = 40;\n    const unit = \"pt\";\n    const size = \"A4\"; // Use A1, A2, A3 or A4\n\n    const orientation = \"portrait\"; // portrait or landscape\n\n    const doc = new jsPDF(orientation, unit, size);\n    doc.setFontSize(15);\n\n    if (this.props.auth) {\n      const data = this.props.auth.logs.map(elt => [elt._id, elt.agent, elt.ip, elt.last_login]);\n      console.log(data);\n      let content = {\n        startY: 50,\n        head: headers,\n        body: data\n      };\n      doc.text(title, marginLeft, 40);\n      doc.autoPrint(content);\n    }\n\n    doc.save('Test.pdf');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Login Activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this), \"Here is your last 10 login activities log\", /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          float: 'right'\n        },\n        onClick: this.handleDownload,\n        children: [/*#__PURE__*/_jsxDEV(DownloadOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 95\n        }, this), \"Download all activities as PDF\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          marginTop: '30px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-hover\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"User Agent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"IP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.props.auth ? this.props.auth.logs.reverse().slice(0, 10).map(data => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      width: '200px',\n                      overflow: 'hidden',\n                      textOverflow: 'ellipsis'\n                    },\n                    children: data.agent\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: data.ip ? data.ip : \"Ip Address Not Found\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: moment(data.last_login).format('LLL')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 37\n                }, this)]\n              }, data._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this);\n            }) : \"No data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth.user.user\n});\n\nexport default connect(mapStateToProps)(Logs);","map":{"version":3,"sources":["/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Dashboard/Profile/Logs/Logs.js"],"names":["React","Component","connect","moment","Button","DownloadOutlined","jsPDF","Logs","constructor","props","handleDownload","bind","console","log","title","headers","marginLeft","unit","size","orientation","doc","setFontSize","auth","data","logs","map","elt","_id","agent","ip","last_login","content","startY","head","body","text","autoPrint","save","render","float","marginTop","reverse","slice","width","overflow","textOverflow","format","mapStateToProps","state","user"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAQC,MAAR,QAAsB,MAAtB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAAQC,KAAR,QAAoB,OAApB;AACA,OAAO,MAAMC,IAAN,SAAmBN,SAAnB,CAA6B;AAEhCO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACH;;AAEDD,EAAAA,cAAc,GAAE;AACZE,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,UAAMC,KAAK,GAAG,qBAAd;AACA,UAAMC,OAAO,GAAG,CAAC,CAAC,IAAD,EAAO,OAAP,EAAgB,IAAhB,EAAsB,MAAtB,CAAD,CAAhB;AACA,UAAMC,UAAU,GAAG,EAAnB;AACA,UAAMC,IAAI,GAAG,IAAb;AACA,UAAMC,IAAI,GAAG,IAAb,CANY,CAMO;;AACnB,UAAMC,WAAW,GAAG,UAApB,CAPY,CAOoB;;AAChC,UAAMC,GAAG,GAAG,IAAId,KAAJ,CAAUa,WAAV,EAAuBF,IAAvB,EAA6BC,IAA7B,CAAZ;AAEAE,IAAAA,GAAG,CAACC,WAAJ,CAAgB,EAAhB;;AACA,QAAG,KAAKZ,KAAL,CAAWa,IAAd,EAAmB;AACf,YAAMC,IAAI,GAAG,KAAKd,KAAL,CAAWa,IAAX,CAAgBE,IAAhB,CAAqBC,GAArB,CAAyBC,GAAG,IAAG,CAACA,GAAG,CAACC,GAAL,EAAUD,GAAG,CAACE,KAAd,EAAqBF,GAAG,CAACG,EAAzB,EAA6BH,GAAG,CAACI,UAAjC,CAA/B,CAAb;AACAlB,MAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACA,UAAIQ,OAAO,GAAG;AACVC,QAAAA,MAAM,EAAE,EADE;AAEVC,QAAAA,IAAI,EAAElB,OAFI;AAGVmB,QAAAA,IAAI,EAAEX;AAHI,OAAd;AAKAH,MAAAA,GAAG,CAACe,IAAJ,CAASrB,KAAT,EAAeE,UAAf,EAA2B,EAA3B;AACAI,MAAAA,GAAG,CAACgB,SAAJ,CAAcL,OAAd;AACH;;AACDX,IAAAA,GAAG,CAACiB,IAAJ,CAAS,UAAT;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACE;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,4DAGI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAA9B;AAAkD,QAAA,OAAO,EAAE,KAAK7B,cAAhE;AAAA,gCAAgF,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,gBAAhF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAE;AAAE8B,UAAAA,SAAS,EAAE;AAAb,SAAlC;AAAA,+BACE;AAAO,UAAA,SAAS,EAAC,mBAAjB;AAAA,kCACI;AAAA,mCACI;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAQI;AAAA,sBACK,KAAK/B,KAAL,CAAWa,IAAX,GAAgB,KAAKb,KAAL,CAAWa,IAAX,CAAgBE,IAAhB,CAAqBiB,OAArB,GAA+BC,KAA/B,CAAqC,CAArC,EAAuC,EAAvC,EAA2CjB,GAA3C,CAAgDF,IAAD,IAAQ;AACpE,kCACI;AAAA,wCACI;AAAA,yCAAI;AAAG,oBAAA,KAAK,EAAE;AAAEoB,sBAAAA,KAAK,EAAE,OAAT;AAAkBC,sBAAAA,QAAQ,EAAE,QAA5B;AAAsCC,sBAAAA,YAAY,EAAE;AAApD,qBAAV;AAAA,8BAA6EtB,IAAI,CAACK;AAAlF;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,4BAAKL,IAAI,CAACM,EAAL,GAAQN,IAAI,CAACM,EAAb,GAAgB;AAArB;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAA,4BAAK1B,MAAM,CAACoB,IAAI,CAACO,UAAN,CAAN,CAAwBgB,MAAxB,CAA+B,KAA/B;AAAL;AAAA;AAAA;AAAA;AAAA,wBAHJ;AAAA,iBAASvB,IAAI,CAACI,GAAd;AAAA;AAAA;AAAA;AAAA,sBADJ;AAOH,aARgB,CAAhB,GAQE;AATP;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA6BH;;AA7D+B;;AAiEpC,MAAMoB,eAAe,GAAIC,KAAD,KAAY;AAChC1B,EAAAA,IAAI,EAAE0B,KAAK,CAAC1B,IAAN,CAAW2B,IAAX,CAAgBA;AADU,CAAZ,CAAxB;;AAIA,eAAe/C,OAAO,CAAC6C,eAAD,CAAP,CAA0BxC,IAA1B,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport moment from 'moment'\nimport{ Button } from 'antd'\nimport { DownloadOutlined } from '@ant-design/icons';\nimport {jsPDF} from 'jspdf'\nexport class Logs extends Component {\n\n    constructor(props){\n        super(props)\n        this.handleDownload = this.handleDownload.bind(this)\n    }\n\n    handleDownload(){\n        console.log('working')\n        const title = \"You Activity Report\";\n        const headers = [[\"ID\", \"AGENT\", \"IP\", \"DATE\"]];  \n        const marginLeft = 40;\n        const unit = \"pt\";\n        const size = \"A4\"; // Use A1, A2, A3 or A4\n        const orientation = \"portrait\"; // portrait or landscape\n        const doc = new jsPDF(orientation, unit, size);\n\n        doc.setFontSize(15);    \n        if(this.props.auth){\n            const data = this.props.auth.logs.map(elt=> [elt._id, elt.agent, elt.ip, elt.last_login]);  \n            console.log(data)\n            let content = {\n                startY: 50,\n                head: headers,\n                body: data\n              };\n            doc.text(title,marginLeft, 40)\n            doc.autoPrint(content)\n        }\n        doc.save('Test.pdf');\n    }\n    render() {\n        return (\n          <div>\n              <h3>Login Activity</h3>\n              Here is your last 10 login activities log\n              <Button type=\"primary\" style={{ float: 'right' }} onClick={this.handleDownload}><DownloadOutlined />Download all activities as PDF</Button>\n              <div className=\"container\" style={{ marginTop: '30px' }}>\n                <table className=\"table table-hover\">\n                    <thead>\n                        <tr>\n                            <th>User Agent</th>\n                            <th>IP</th>\n                            <th>Time</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.auth?this.props.auth.logs.reverse().slice(0,10).map((data)=>{\n                            return(\n                                <tr key={data._id}>\n                                    <td><p style={{ width: '200px', overflow: 'hidden', textOverflow: 'ellipsis' }}>{data.agent}</p></td>\n                                    <td>{data.ip?data.ip:\"Ip Address Not Found\"}</td>\n                                    <td>{moment(data.last_login).format('LLL')}</td>\n                                </tr>\n                            )\n                        }):\"No data\"}\n                    </tbody>\n                </table>\n              </div>\n          </div>\n        )\n    }\n  \n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth.user.user\n});\n\nexport default connect(mapStateToProps,)(Logs);\n"]},"metadata":{},"sourceType":"module"}