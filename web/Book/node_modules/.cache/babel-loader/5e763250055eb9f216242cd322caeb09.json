{"ast":null,"code":"import { TRANSCATION_LOADED, TRANSCATION_LOADING } from '../Action/types';\nconst initialState = {\n  isLoading: false,\n  transcation: null\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case TRANSCATION_LOADED:\n      return {\n        isLoading: false,\n        transcation: action.payload.transcations\n      };\n    //   case ACCOUNT_CREATED:\n    //     return{\n    //         isLoading: false,\n    //         account: state.account.concat(action.payload.accounts)\n    //     }\n    //   case ACCOUNT_DELETED:\n    //       return{\n    //           isLoading: false,\n    //           account: state.account.filter(data => data._id !== action.payload.accounts._id)\n    //       }\n    //   case ACCOUNT_UPDATED:\n    //       return {\n    //             isLoading: false,\n    //             account: state.account.map((data,index)=> data._id === action.payload.accounts._id ? action.payload.accounts : data)\n    //         }\n    //   case ACCOUNT_ERROR: {\n    //     return {\n    //         ...state,\n    //         error: action.payload,\n    //         isLoading: false\n    //       }\n    //   }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Store/Reducer/transcation.js"],"names":["TRANSCATION_LOADED","TRANSCATION_LOADING","initialState","isLoading","transcation","state","action","type","payload","transcations"],"mappings":"AAAA,SACIA,kBADJ,EAEIC,mBAFJ,QAGS,iBAHT;AAKE,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAArB;AAKA,eAAe,UAAUC,KAAK,GAAGH,YAAlB,EAAgCI,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKP,kBAAL;AACE,aAAO;AACHG,QAAAA,SAAS,EAAE,KADR;AAEHC,QAAAA,WAAW,EAAEE,MAAM,CAACE,OAAP,CAAeC;AAFzB,OAAP;AAIJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACE,aAAOJ,KAAP;AA9BJ;AAgCD","sourcesContent":["import {\n    TRANSCATION_LOADED,\n    TRANSCATION_LOADING,\n  } from '../Action/types';\n  \n  const initialState = {\n    isLoading: false,\n    transcation: null,\n  };\n\n  export default function (state = initialState ,action) {\n    switch (action.type) {\n\n      case TRANSCATION_LOADED:\n        return {\n            isLoading: false,\n            transcation: action.payload.transcations,\n        }; \n    //   case ACCOUNT_CREATED:\n    //     return{\n    //         isLoading: false,\n    //         account: state.account.concat(action.payload.accounts)\n    //     }\n    //   case ACCOUNT_DELETED:\n    //       return{\n    //           isLoading: false,\n    //           account: state.account.filter(data => data._id !== action.payload.accounts._id)\n    //       }\n    //   case ACCOUNT_UPDATED:\n    //       return {\n    //             isLoading: false,\n    //             account: state.account.map((data,index)=> data._id === action.payload.accounts._id ? action.payload.accounts : data)\n    //         }\n    //   case ACCOUNT_ERROR: {\n    //     return {\n    //         ...state,\n    //         error: action.payload,\n    //         isLoading: false\n    //       }\n    //   }\n      default:\n        return state;\n    }\n  }"]},"metadata":{},"sourceType":"module"}