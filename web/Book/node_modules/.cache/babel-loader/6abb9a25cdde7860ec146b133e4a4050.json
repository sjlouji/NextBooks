{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Dashboard/Transcation/Transcation.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Button, message, Modal } from 'antd';\nimport { connect } from 'react-redux';\nimport { loadTranscation } from '../../../Store/Action/transcation';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport moment from 'moment'; // Success Messge Box\n\nconst success = () => {\n  message.success('This is a success message');\n}; // Error Message Box\n\n\nconst error = data => {\n  message.error(data);\n};\n\nexport class Transcation extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      transcations: [],\n      visible: false\n    };\n\n    this.onChange = e => this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    this.onDropDownChange = e => this.setState({\n      account_type: e\n    });\n  }\n\n  componentDidMount() {\n    this.props.loadTranscation();\n    this.setState({\n      transcations: this.props.transcation\n    });\n  } //  Fired when the component recieves new props\n\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.error !== undefined) {\n      if (nextProps.error.message === 'Network Error') {\n        error(nextProps.error.message);\n        this.setState({\n          transcations: nextProps.transcation\n        });\n      } else {\n        this.setState({\n          transcations: nextProps.transcation\n        });\n        error(nextProps.error.response.data.error);\n      }\n    }\n\n    this.setState({\n      transcations: nextProps.transcation\n    });\n  } //  Handles the things that happen after clicking Add a new Account\n\n\n  handleAddAccount() {\n    this.setState({\n      visible: false\n    }); // if(this.state.account_id === ''){error('Account Number can not be Empty')}\n    // else if(this.state.account_name === ''){error('Account Name can not be Empty')}\n    // else if(this.state.initialBalance === ''){error('Initial balance can not be Empty')}\n    // else if(this.state.account_provider === ''){error('Account Provider can not be Empty')}\n    // else{\n    //     this.props.addAccount(this.state.account_id, this.state.account_name, this.state.account_type, this.state.initialBalance, this.state.account_provider)\n    //     this.setState({visible: false})\n    // }\n  } //  Handles delete\n\n\n  handleDelete(id) {// this.props.deleteAccount(id)\n  } //  Onchage for normal Input and Dropdown Input\n\n\n  render() {\n    console.log(this.state.transcations);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"page-title-box\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col\",\n                    children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                      className: \"page-title\",\n                      children: \"Transcations\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            style: {\n              float: 'right',\n              marginRight: '100px'\n            },\n            onClikck: () => this.setState({\n              visible: true\n            }),\n            children: \"Add a Transcation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '50px'\n        },\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            \"aria-label\": \"simple table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              style: {\n                backgroundColor: '#f4f8ff'\n              },\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Debit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Transcation Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"From Account\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: this.state.transcations ? this.state.transcations.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: moment(row.createdAt).format('LLL')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: row.debit ? \"Debit\" : \"Credit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: row.amount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: row.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: row.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: row.transcation_type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: row.account.account_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: row.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 29\n                }, this)]\n              }, row._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 29\n              }, this)) : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"Add a New Account\",\n        centered: true,\n        visible: this.state.visible,\n        okText: \"Add Account\",\n        onOk: () => this.handleAddAccount(),\n        onCancel: () => this.setState({\n          visible: false\n        }),\n        width: 500,\n        children: \"HI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isLoading: state.auth.isLoading,\n  transcation: state.transcation.transcation\n});\n\nexport default connect(mapStateToProps, {\n  loadTranscation\n})(Transcation);","map":{"version":3,"sources":["/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Books/Dashboard/Transcation/Transcation.js"],"names":["React","Component","Row","Col","Button","message","Modal","connect","loadTranscation","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","moment","success","error","data","Transcation","state","transcations","visible","onChange","e","setState","target","name","value","onDropDownChange","account_type","componentDidMount","props","transcation","componentWillReceiveProps","nextProps","undefined","response","handleAddAccount","handleDelete","id","render","console","log","float","marginRight","padding","backgroundColor","map","row","createdAt","format","debit","amount","description","category","transcation_type","account","account_name","_id","mapStateToProps","isLoading","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Row, Col, Button, message, Modal } from 'antd';\nimport { connect } from 'react-redux';\nimport { loadTranscation } from '../../../Store/Action/transcation'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport  moment  from 'moment';\n\n// Success Messge Box\nconst success = () => {\n    message.success('This is a success message');\n};\n  \n// Error Message Box\nconst error = (data) => {\n    message.error(data);\n};\n\nexport class Transcation extends Component {\n\n    state = {\n        transcations: [],\n        visible: false,\n\n    }\n\n    componentDidMount(){\n        this.props.loadTranscation()\n        this.setState({\n            transcations: this.props.transcation\n        })\n    }\n\n    //  Fired when the component recieves new props\n    componentWillReceiveProps(nextProps){\n        if(nextProps.error !== undefined){\n            if(nextProps.error.message === 'Network Error'){\n                error(nextProps.error.message)\n                this.setState({ transcations: nextProps.transcation })\n            }else{\n                this.setState({ transcations: nextProps.transcation })\n                error(nextProps.error.response.data.error)\n            }\n        }\n        this.setState({ transcations: nextProps.transcation })\n    }\n\n    //  Handles the things that happen after clicking Add a new Account\n    handleAddAccount(){\n            this.setState({visible: false})\n        // if(this.state.account_id === ''){error('Account Number can not be Empty')}\n        // else if(this.state.account_name === ''){error('Account Name can not be Empty')}\n        // else if(this.state.initialBalance === ''){error('Initial balance can not be Empty')}\n        // else if(this.state.account_provider === ''){error('Account Provider can not be Empty')}\n        // else{\n        //     this.props.addAccount(this.state.account_id, this.state.account_name, this.state.account_type, this.state.initialBalance, this.state.account_provider)\n        //     this.setState({visible: false})\n        // }\n    }\n\n    //  Handles delete\n    handleDelete(id){\n        // this.props.deleteAccount(id)\n    }\n\n    //  Onchage for normal Input and Dropdown Input\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n    onDropDownChange = (e) => this.setState({ account_type: e });\n\n    render() {\n        console.log(this.state.transcations)\n        return (\n          <div className=\"container-fluid\">\n            <Row>\n                <Col span={12}>\n                    {/* BreadCrumps */}\n                    <div className=\"row\">\n                        <div className=\"col-lg-6\">\n                            <div className=\"page-title-box\">\n                                <div className=\"row\">\n                                    <div className=\"col\">\n                                        <h4 className=\"page-title\">Transcations</h4>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Col>\n                <Col span={12}>\n                    <Button type=\"primary\" style={{ float: 'right', marginRight: '100px' }} onClikck={()=>this.setState({visible: true})}>Add a Transcation</Button>\n                </Col>\n            </Row>\n            <div style={{ padding: '50px' }}>\n                <TableContainer>\n                    <Table  aria-label=\"simple table\">\n                        <TableHead style={{ backgroundColor: '#f4f8ff' }}>\n                            <TableRow>\n                                <TableCell>Date</TableCell>\n                                <TableCell align=\"center\">Debit</TableCell>\n                                <TableCell align=\"center\">Amount</TableCell>\n                                <TableCell align=\"center\">Description</TableCell>\n                                <TableCell align=\"center\">Category</TableCell>\n                                <TableCell align=\"center\">Transcation Type</TableCell>\n                                <TableCell align=\"center\">From Account</TableCell>\n                                <TableCell align=\"center\">Category</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        {this.state.transcations?this.state.transcations.map((row) => (\n                            <TableRow key={row._id}>\n                            <TableCell component=\"th\" scope=\"row\">{moment(row.createdAt).format('LLL')}</TableCell>\n                            <TableCell align=\"center\">{row.debit?\"Debit\":\"Credit\"}</TableCell>\n                            <TableCell align=\"center\">{row.amount}</TableCell>\n                            <TableCell align=\"center\">{row.description}</TableCell>\n                            <TableCell align=\"center\">{row.category}</TableCell>\n                            <TableCell align=\"center\">{row.transcation_type}</TableCell>\n                            <TableCell align=\"center\">{row.account.account_name}</TableCell>\n                            <TableCell align=\"center\">{row.category}</TableCell>\n                            </TableRow>\n                        )):\"\"}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n                <Modal\n                    title=\"Add a New Account\"\n                    centered\n                    visible={this.state.visible}\n                    okText=\"Add Account\"\n                    onOk={() => this.handleAddAccount()}\n                    onCancel={() => this.setState({visible: false})}\n                    width={500}\n                >   \n                    HI\n                </Modal>\n          </div>\n        )\n    }\n  \n}\n\nconst mapStateToProps = (state) => ({\n    isLoading: state.auth.isLoading,\n    transcation: state.transcation.transcation,\n  });\n  \n\nexport default connect(mapStateToProps,{loadTranscation})(Transcation);\n"]},"metadata":{},"sourceType":"module"}