{"ast":null,"code":"import { USER_LOADED, USER_LOADING, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, REGISTER_SUCCESS, REGISTER_FAIL, RESET_PASSWORD, CHANGE_PASSWORD, UPDATE_SUCCESS } from '../Action/types';\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  isLoading: false,\n  user: null\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADED:\n      return { ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', action.payload.Token);\n      return { ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n\n    case REGISTER_SUCCESS:\n      localStorage.setItem('token', action.payload.Token);\n      return { ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n\n    case AUTH_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n      localStorage.removeItem('token');\n      return {\n        logout: 'SUCCESS'\n      };\n\n    case RESET_PASSWORD:\n      return {\n        reset: action.payload\n      };\n\n    case CHANGE_PASSWORD:\n      return {\n        reset: action.payload\n      };\n\n    case REGISTER_FAIL:\n      localStorage.removeItem('token');\n      return { ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n\n    case UPDATE_SUCCESS:\n      return { ...state,\n        user: action.payload.user,\n        isAuthenticated: true,\n        isLoading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Store/Reducer/auth.js"],"names":["USER_LOADED","USER_LOADING","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","REGISTER_SUCCESS","REGISTER_FAIL","RESET_PASSWORD","CHANGE_PASSWORD","UPDATE_SUCCESS","initialState","token","localStorage","getItem","isAuthenticated","isLoading","user","state","action","type","payload","setItem","Token","error","removeItem","logout","reset"],"mappings":"AAAA,SACIA,WADJ,EAEIC,YAFJ,EAGIC,UAHJ,EAIIC,aAJJ,EAKIC,UALJ,EAMIC,cANJ,EAOIC,gBAPJ,EAQIC,aARJ,EASIC,cATJ,EAUIC,eAVJ,EAWIC,cAXJ,QAYS,iBAZT;AAcE,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,EAAAA,eAAe,EAAE,KAFE;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,IAAI,EAAE;AAJa,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGP,YAAlB,EAAgCQ,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKpB,WAAL;AACE,aAAO,EACL,GAAGkB,KADE;AAELH,QAAAA,eAAe,EAAE,IAFZ;AAGLC,QAAAA,SAAS,EAAE,KAHN;AAILC,QAAAA,IAAI,EAAEE,MAAM,CAACE;AAJR,OAAP;;AAMF,SAAKlB,aAAL;AACEU,MAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BH,MAAM,CAACE,OAAP,CAAeE,KAA7C;AACA,aAAO,EACL,GAAGL,KADE;AAELD,QAAAA,IAAI,EAAEE,MAAM,CAACE,OAFR;AAGLN,QAAAA,eAAe,EAAE,IAHZ;AAILC,QAAAA,SAAS,EAAE;AAJN,OAAP;;AAMF,SAAKV,gBAAL;AACEO,MAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BH,MAAM,CAACE,OAAP,CAAeE,KAA7C;AACA,aAAO,EACL,GAAGL,KADE;AAELD,QAAAA,IAAI,EAAEE,MAAM,CAACE,OAFR;AAGLN,QAAAA,eAAe,EAAE,IAHZ;AAILC,QAAAA,SAAS,EAAE;AAJN,OAAP;;AAMF,SAAKd,UAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELM,QAAAA,KAAK,EAAEL,MAAM,CAACE;AAFT,OAAP;;AAIF,SAAKjB,UAAL;AACA,SAAKC,cAAL;AACEQ,MAAAA,YAAY,CAACY,UAAb,CAAwB,OAAxB;AACA,aAAM;AACJC,QAAAA,MAAM,EAAE;AADJ,OAAN;;AAGF,SAAKlB,cAAL;AACE,aAAM;AACJmB,QAAAA,KAAK,EAAER,MAAM,CAACE;AADV,OAAN;;AAGF,SAAKZ,eAAL;AACE,aAAM;AACJkB,QAAAA,KAAK,EAAER,MAAM,CAACE;AADV,OAAN;;AAGF,SAAKd,aAAL;AACEM,MAAAA,YAAY,CAACY,UAAb,CAAwB,OAAxB;AACA,aAAO,EACL,GAAGP,KADE;AAELN,QAAAA,KAAK,EAAE,IAFF;AAGLK,QAAAA,IAAI,EAAE,IAHD;AAILF,QAAAA,eAAe,EAAE,KAJZ;AAKLC,QAAAA,SAAS,EAAE;AALN,OAAP;;AAOF,SAAKN,cAAL;AACE,aAAM,EACJ,GAAGQ,KADC;AAEJD,QAAAA,IAAI,EAAEE,MAAM,CAACE,OAAP,CAAeJ,IAFjB;AAGJF,QAAAA,eAAe,EAAE,IAHb;AAIJC,QAAAA,SAAS,EAAE;AAJP,OAAN;;AAMF;AACE,aAAOE,KAAP;AA7DJ;AA+DD","sourcesContent":["import {\n    USER_LOADED,\n    USER_LOADING,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    RESET_PASSWORD,\n    CHANGE_PASSWORD,\n    UPDATE_SUCCESS\n  } from '../Action/types';\n  \n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: false,\n    isLoading: false,\n    user: null,\n  };\n\n  export default function (state = initialState ,action) {\n    switch (action.type) {\n\n      case USER_LOADED:\n        return {\n          ...state,\n          isAuthenticated: true,\n          isLoading: false,\n          user: action.payload,\n        };\n      case LOGIN_SUCCESS:\n        localStorage.setItem('token', action.payload.Token);\n        return {\n          ...state,\n          user: action.payload,\n          isAuthenticated: true,\n          isLoading: false,\n        };\n      case REGISTER_SUCCESS:\n        localStorage.setItem('token', action.payload.Token)\n        return {\n          ...state,\n          user: action.payload,\n          isAuthenticated: true,\n          isLoading: false,\n        };\n      case AUTH_ERROR:\n        return {\n          ...state,\n          error: action.payload,\n        }\n      case LOGIN_FAIL:\n      case LOGOUT_SUCCESS:\n        localStorage.removeItem('token');\n        return{\n          logout: 'SUCCESS'\n        }\n      case RESET_PASSWORD:\n        return{\n          reset: action.payload\n        };\n      case CHANGE_PASSWORD:\n        return{\n          reset: action.payload\n        };\n      case REGISTER_FAIL:\n        localStorage.removeItem('token');\n        return {\n          ...state,\n          token: null,\n          user: null,\n          isAuthenticated: false,\n          isLoading: false,\n        };\n      case UPDATE_SUCCESS:\n        return{\n          ...state,\n          user: action.payload.user,\n          isAuthenticated: true,\n          isLoading: false,\n        }\n      default:\n        return state;\n    }\n  }"]},"metadata":{},"sourceType":"module"}