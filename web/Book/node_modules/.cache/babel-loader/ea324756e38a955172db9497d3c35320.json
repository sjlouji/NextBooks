{"ast":null,"code":"import { TRANSCATION_LOADED, TRANSCATION_LOADING } from '../Action/types';\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isLoading: false,\n  account: null\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case TRANSCATION_LOADED:\n      return {\n        isLoading: false,\n        transcation: action.payload.transcations\n      };\n\n    case ACCOUNT_CREATED:\n      return {\n        isLoading: false,\n        account: state.account.concat(action.payload.accounts)\n      };\n\n    case ACCOUNT_DELETED:\n      return {\n        isLoading: false,\n        account: state.account.filter(data => data._id !== action.payload.accounts._id)\n      };\n\n    case ACCOUNT_UPDATED:\n      return {\n        isLoading: false,\n        account: state.account.map((data, index) => data._id === action.payload.accounts._id ? action.payload.accounts : data)\n      };\n\n    case ACCOUNT_ERROR:\n      {\n        return { ...state,\n          error: action.payload,\n          isLoading: false\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Store/Reducer/transcation.js"],"names":["TRANSCATION_LOADED","TRANSCATION_LOADING","initialState","token","localStorage","getItem","isLoading","account","state","action","type","transcation","payload","transcations","ACCOUNT_CREATED","concat","accounts","ACCOUNT_DELETED","filter","data","_id","ACCOUNT_UPDATED","map","index","ACCOUNT_ERROR","error"],"mappings":"AAAA,SACIA,kBADJ,EAEIC,mBAFJ,QAGS,iBAHT;AAKE,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,EAAAA,SAAS,EAAE,KAFQ;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;AAMA,eAAe,UAAUC,KAAK,GAAGN,YAAlB,EAAgCO,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKV,kBAAL;AACE,aAAO;AACHM,QAAAA,SAAS,EAAE,KADR;AAEHK,QAAAA,WAAW,EAAEF,MAAM,CAACG,OAAP,CAAeC;AAFzB,OAAP;;AAIF,SAAKC,eAAL;AACE,aAAM;AACFR,QAAAA,SAAS,EAAE,KADT;AAEFC,QAAAA,OAAO,EAAEC,KAAK,CAACD,OAAN,CAAcQ,MAAd,CAAqBN,MAAM,CAACG,OAAP,CAAeI,QAApC;AAFP,OAAN;;AAIF,SAAKC,eAAL;AACI,aAAM;AACFX,QAAAA,SAAS,EAAE,KADT;AAEFC,QAAAA,OAAO,EAAEC,KAAK,CAACD,OAAN,CAAcW,MAAd,CAAqBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaX,MAAM,CAACG,OAAP,CAAeI,QAAf,CAAwBI,GAAlE;AAFP,OAAN;;AAIJ,SAAKC,eAAL;AACI,aAAO;AACDf,QAAAA,SAAS,EAAE,KADV;AAEDC,QAAAA,OAAO,EAAEC,KAAK,CAACD,OAAN,CAAce,GAAd,CAAkB,CAACH,IAAD,EAAMI,KAAN,KAAeJ,IAAI,CAACC,GAAL,KAAaX,MAAM,CAACG,OAAP,CAAeI,QAAf,CAAwBI,GAArC,GAA2CX,MAAM,CAACG,OAAP,CAAeI,QAA1D,GAAqEG,IAAtG;AAFR,OAAP;;AAIJ,SAAKK,aAAL;AAAoB;AAClB,eAAO,EACH,GAAGhB,KADA;AAEHiB,UAAAA,KAAK,EAAEhB,MAAM,CAACG,OAFX;AAGHN,UAAAA,SAAS,EAAE;AAHR,SAAP;AAKD;;AACD;AACE,aAAOE,KAAP;AA9BJ;AAgCD","sourcesContent":["import {\n    TRANSCATION_LOADED,\n    TRANSCATION_LOADING,\n  } from '../Action/types';\n  \n  const initialState = {\n    token: localStorage.getItem('token'),\n    isLoading: false,\n    account: null,\n  };\n\n  export default function (state = initialState ,action) {\n    switch (action.type) {\n\n      case TRANSCATION_LOADED:\n        return {\n            isLoading: false,\n            transcation: action.payload.transcations,\n        }; \n      case ACCOUNT_CREATED:\n        return{\n            isLoading: false,\n            account: state.account.concat(action.payload.accounts)\n        }\n      case ACCOUNT_DELETED:\n          return{\n              isLoading: false,\n              account: state.account.filter(data => data._id !== action.payload.accounts._id)\n          }\n      case ACCOUNT_UPDATED:\n          return {\n                isLoading: false,\n                account: state.account.map((data,index)=> data._id === action.payload.accounts._id ? action.payload.accounts : data)\n            }\n      case ACCOUNT_ERROR: {\n        return {\n            ...state,\n            error: action.payload,\n            isLoading: false\n          }\n      }\n      default:\n        return state;\n    }\n  }"]},"metadata":{},"sourceType":"module"}