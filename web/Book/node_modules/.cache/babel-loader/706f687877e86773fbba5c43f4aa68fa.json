{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOADED, USER_LOADING, LOGIN_SUCCESS, LOGOUT_SUCCESS, REGISTER_SUCCESS, AUTH_ERROR } from './types';\nconst api = axios.create({\n  baseURL: `http://localhost:8000`\n});\nexport const loadUser = () => (dispatch, getState) => {\n  dispatch({\n    type: USER_LOADING\n  });\n  api.get(`api/auth/user`, tokenConfig(getState)).then(res => {\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n    console.log(res.data);\n  }).catch(err => {\n    console.log(\"In auth\");\n  });\n}; // LOGIN USER\n\nexport const login = (email, password) => dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }; // Request Body\n\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  api.post('/auth/login', body, config).then(res => {\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    console.log(res.data);\n  }).catch(err => {\n    console.log(\"In login auth\");\n    console.log(err.response);\n    dispatch({\n      type: AUTH_ERROR,\n      payload: err\n    });\n  });\n}; // REGISTER USER\n\nexport const register = ({\n  first_name,\n  last_name,\n  password,\n  email\n}) => dispatch => {\n  // Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }; // Request Body\n\n  const body = JSON.stringify({\n    first_name,\n    last_name,\n    email,\n    password\n  });\n  api.post('api/auth/register', body, config).then(res => {\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(err.response);\n  });\n}; // LOGOUT USER\n\nexport const logout = () => (dispatch, getState) => {\n  console.log(\"logged out\");\n  api.post('api/auth/logout/', null, tokenConfig(getState)).then(res => {\n    dispatch({\n      type: LOGOUT_SUCCESS\n    });\n    console.log(\"logout Success\");\n  }).catch(err => {\n    console.log(err.response.data);\n  });\n}; // Setup config with token - helper function\n\nexport const tokenConfig = getState => {\n  const token = getState().auth.token;\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  if (token) {\n    config.headers['Authorization'] = `Token ${token}`;\n  }\n\n  return config;\n};","map":{"version":3,"sources":["/Users/joan/Documents/Louji/Project/nextbooks/web/src/Store/Action/auth.js"],"names":["axios","USER_LOADED","USER_LOADING","LOGIN_SUCCESS","LOGOUT_SUCCESS","REGISTER_SUCCESS","AUTH_ERROR","api","create","baseURL","loadUser","dispatch","getState","type","get","tokenConfig","then","res","payload","data","console","log","catch","err","login","email","password","config","headers","body","JSON","stringify","post","response","register","first_name","last_name","logout","token","auth"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  LOGIN_SUCCESS,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  AUTH_ERROR,\n} from './types';\n\n\nconst api = axios.create({\n  baseURL: `http://localhost:8000`\n})\n\nexport const loadUser = () => (dispatch, getState) => {\n  dispatch({ type: USER_LOADING });\n  api\n    .get(`api/auth/user`, tokenConfig(getState))\n    .then((res) => {\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data,\n      });\n      console.log(res.data)\n    })\n    .catch((err) => {\n      console.log(\"In auth\")\n\n    });\n};\n\n// LOGIN USER\nexport const login = (email, password) => (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  // Request Body\n  const body = JSON.stringify({ email, password });\n\n  api\n    .post('/auth/login', body, config)\n    .then((res) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n      console.log(res.data)\n    })\n    .catch((err) => {\n      console.log(\"In login auth\")\n      console.log(err.response)\n      dispatch({ \n        type: AUTH_ERROR,\n        payload: err,\n      })\n    });\n};\n\n// REGISTER USER\nexport const register = ({ first_name,last_name, password, email }) => (dispatch) => {\n  // Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  // Request Body\n  const body = JSON.stringify({ first_name,last_name, email, password });\n\n  api\n    .post('api/auth/register', body, config)\n    .then((res) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      console.log(err.response)\n    });\n};\n\n// LOGOUT USER\nexport const logout = () => (dispatch, getState) => {\n  console.log(\"logged out\")\n  api\n    .post('api/auth/logout/', null, tokenConfig(getState))\n    .then((res) => {\n      dispatch({\n        type: LOGOUT_SUCCESS,\n      });\n      console.log(\"logout Success\")\n    })\n    .catch((err) => {\n        console.log(err.response.data)\n    });\n};\n\n// Setup config with token - helper function\nexport const tokenConfig = (getState) => {\n  const token = getState().auth.token;\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  if (token) {\n    config.headers['Authorization'] = `Token ${token}`;\n  }\n\n  return config;\n};"]},"metadata":{},"sourceType":"module"}