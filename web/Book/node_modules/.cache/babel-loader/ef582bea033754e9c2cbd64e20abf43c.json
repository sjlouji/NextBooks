{"ast":null,"code":"import { ACCOUNTS_LOADED, ACCOUNT_CREATED, ACCOUNT_DELETED, ACCOUNT_UPDATED } from '../Action/types';\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isLoading: false,\n  account: null\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ACCOUNTS_LOADED:\n      return {\n        isLoading: false,\n        account: action.payload.accounts\n      };\n\n    case ACCOUNT_CREATED:\n      return {\n        isLoading: false,\n        account: state.account.concat(action.payload.accounts)\n      };\n\n    case ACCOUNT_DELETED:\n      return {\n        isLoading: false,\n        account: state.account.filter(data => data._id !== action.payload.accounts._id)\n      };\n\n    case ACCOUNT_UPDATED:\n      return {\n        isLoading: false,\n        account: state.account.map((data, index) => data._id === action.payload.accounts._id ? {\n          index: action.payload.accounts\n        } : data)\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Store/Reducer/account.js"],"names":["ACCOUNTS_LOADED","ACCOUNT_CREATED","ACCOUNT_DELETED","ACCOUNT_UPDATED","initialState","token","localStorage","getItem","isLoading","account","state","action","type","payload","accounts","concat","filter","data","_id","map","index"],"mappings":"AAAA,SACIA,eADJ,EAEIC,eAFJ,EAGIC,eAHJ,EAIIC,eAJJ,QAKS,iBALT;AAOE,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,EAAAA,SAAS,EAAE,KAFQ;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;AAMA,eAAe,UAAUC,KAAK,GAAGN,YAAlB,EAAgCO,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKZ,eAAL;AACE,aAAO;AACHQ,QAAAA,SAAS,EAAE,KADR;AAEHC,QAAAA,OAAO,EAAEE,MAAM,CAACE,OAAP,CAAeC;AAFrB,OAAP;;AAIF,SAAKb,eAAL;AACE,aAAM;AACFO,QAAAA,SAAS,EAAE,KADT;AAEFC,QAAAA,OAAO,EAAEC,KAAK,CAACD,OAAN,CAAcM,MAAd,CAAqBJ,MAAM,CAACE,OAAP,CAAeC,QAApC;AAFP,OAAN;;AAIF,SAAKZ,eAAL;AACI,aAAM;AACFM,QAAAA,SAAS,EAAE,KADT;AAEFC,QAAAA,OAAO,EAAEC,KAAK,CAACD,OAAN,CAAcO,MAAd,CAAqBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaP,MAAM,CAACE,OAAP,CAAeC,QAAf,CAAwBI,GAAlE;AAFP,OAAN;;AAIJ,SAAKf,eAAL;AACI,aAAO;AACDK,QAAAA,SAAS,EAAE,KADV;AAEDC,QAAAA,OAAO,EAAEC,KAAK,CAACD,OAAN,CAAcU,GAAd,CAAkB,CAACF,IAAD,EAAMG,KAAN,KAAeH,IAAI,CAACC,GAAL,KAAaP,MAAM,CAACE,OAAP,CAAeC,QAAf,CAAwBI,GAArC,GAA2C;AAACE,UAAAA,KAAK,EAAET,MAAM,CAACE,OAAP,CAAeC;AAAvB,SAA3C,GAA8EG,IAA/G;AAFR,OAAP;;AAIJ;AACE,aAAOP,KAAP;AAvBJ;AAyBD","sourcesContent":["import {\n    ACCOUNTS_LOADED,\n    ACCOUNT_CREATED,\n    ACCOUNT_DELETED,\n    ACCOUNT_UPDATED\n  } from '../Action/types';\n  \n  const initialState = {\n    token: localStorage.getItem('token'),\n    isLoading: false,\n    account: null,\n  };\n\n  export default function (state = initialState ,action) {\n    switch (action.type) {\n\n      case ACCOUNTS_LOADED:\n        return {\n            isLoading: false,\n            account: action.payload.accounts,\n        }; \n      case ACCOUNT_CREATED:\n        return{\n            isLoading: false,\n            account: state.account.concat(action.payload.accounts)\n        }\n      case ACCOUNT_DELETED:\n          return{\n              isLoading: false,\n              account: state.account.filter(data => data._id !== action.payload.accounts._id)\n          }\n      case ACCOUNT_UPDATED:\n          return {\n                isLoading: false,\n                account: state.account.map((data,index)=> data._id === action.payload.accounts._id ? {index: action.payload.accounts} : data)\n            }\n      default:\n        return state;\n    }\n  }"]},"metadata":{},"sourceType":"module"}