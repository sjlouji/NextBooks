{"ast":null,"code":"import { TRANSCATION_LOADED, TRANSCATION_LOADING, TRANSCATION_CREATED, TRANSCATION_DELETED } from '../Action/types';\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isLoading: false,\n  transcation: null\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case TRANSCATION_LOADED:\n      return {\n        isLoading: false,\n        transcation: action.payload.transcations\n      };\n\n    case TRANSCATION_CREATED:\n      return {\n        isLoading: false,\n        transcation: state.transcation.concat(action.payload.transcations)\n      };\n\n    case TRANSCATION_DELETED:\n      return {\n        isLoading: false,\n        transcation: state.account.filter(data => data._id !== action.payload.transcations._id)\n      };\n    //   case ACCOUNT_UPDATED:\n    //       return {\n    //             isLoading: false,\n    //             account: state.account.map((data,index)=> data._id === action.payload.accounts._id ? action.payload.accounts : data)\n    //         }\n    //   case ACCOUNT_ERROR: {\n    //     return {\n    //         ...state,\n    //         error: action.payload,\n    //         isLoading: false\n    //       }\n    //   }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/joan/Documents/Louji/Project/nextbooks/web/Book/src/Store/Reducer/transcation.js"],"names":["TRANSCATION_LOADED","TRANSCATION_LOADING","TRANSCATION_CREATED","TRANSCATION_DELETED","initialState","token","localStorage","getItem","isLoading","transcation","state","action","type","payload","transcations","concat","account","filter","data","_id"],"mappings":"AAAA,SACIA,kBADJ,EAEIC,mBAFJ,EAGIC,mBAHJ,EAIIC,mBAJJ,QAKS,iBALT;AAOE,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,EAAAA,SAAS,EAAE,KAFQ;AAGnBC,EAAAA,WAAW,EAAE;AAHM,CAArB;AAMA,eAAe,UAAUC,KAAK,GAAGN,YAAlB,EAAgCO,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKZ,kBAAL;AACE,aAAO;AACHQ,QAAAA,SAAS,EAAE,KADR;AAEHC,QAAAA,WAAW,EAAEE,MAAM,CAACE,OAAP,CAAeC;AAFzB,OAAP;;AAIF,SAAKZ,mBAAL;AACE,aAAM;AACFM,QAAAA,SAAS,EAAE,KADT;AAEFC,QAAAA,WAAW,EAAEC,KAAK,CAACD,WAAN,CAAkBM,MAAlB,CAAyBJ,MAAM,CAACE,OAAP,CAAeC,YAAxC;AAFX,OAAN;;AAIF,SAAKX,mBAAL;AACI,aAAM;AACFK,QAAAA,SAAS,EAAE,KADT;AAEFC,QAAAA,WAAW,EAAEC,KAAK,CAACM,OAAN,CAAcC,MAAd,CAAqBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeC,YAAf,CAA4BK,GAAtE;AAFX,OAAN;AAIN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE;AACE,aAAOT,KAAP;AA9BJ;AAgCD","sourcesContent":["import {\n    TRANSCATION_LOADED,\n    TRANSCATION_LOADING,\n    TRANSCATION_CREATED,\n    TRANSCATION_DELETED\n  } from '../Action/types';\n  \n  const initialState = {\n    token: localStorage.getItem('token'),\n    isLoading: false,\n    transcation: null,\n  };\n\n  export default function (state = initialState ,action) {\n    switch (action.type) {\n\n      case TRANSCATION_LOADED:\n        return {\n            isLoading: false,\n            transcation: action.payload.transcations,\n        }; \n      case TRANSCATION_CREATED:\n        return{\n            isLoading: false,\n            transcation: state.transcation.concat(action.payload.transcations)\n        }\n      case TRANSCATION_DELETED:\n          return{\n              isLoading: false,\n              transcation: state.account.filter(data => data._id !== action.payload.transcations._id)\n          }\n    //   case ACCOUNT_UPDATED:\n    //       return {\n    //             isLoading: false,\n    //             account: state.account.map((data,index)=> data._id === action.payload.accounts._id ? action.payload.accounts : data)\n    //         }\n    //   case ACCOUNT_ERROR: {\n    //     return {\n    //         ...state,\n    //         error: action.payload,\n    //         isLoading: false\n    //       }\n    //   }\n      default:\n        return state;\n    }\n  }"]},"metadata":{},"sourceType":"module"}